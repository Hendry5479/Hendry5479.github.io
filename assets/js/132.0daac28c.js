(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{498:function(_,t,v){"use strict";v.r(t);var a=v(45),r=Object(a.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"二、https协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、https协议"}},[_._v("#")]),_._v(" 二、HTTPS协议")]),_._v(" "),v("h3",{attrs:{id:"_1-什么是https协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是https协议"}},[_._v("#")]),_._v(" 1. 什么是HTTPS协议？")]),_._v(" "),v("p",[_._v("HTTPS经由HTTP进行通信，利用SSL/TLS来加密数据包，提供对网站服务器的身份认证，保护交换数据的隐私与完整性。 "),v("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10885a9d4d574d7caf3fee1416f623ca~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}}),_._v(" HTTP协议采用"),v("strong",[_._v("明文传输")]),_._v("信息，存在"),v("strong",[_._v("信息窃听")]),_._v("、"),v("strong",[_._v("信息篡改")]),_._v("和"),v("strong",[_._v("信息劫持")]),_._v("的风险，而协议TLS/SSL具有"),v("strong",[_._v("身份验证")]),_._v("、"),v("strong",[_._v("信息加密")]),_._v("和"),v("strong",[_._v("完整性校验")]),_._v("的功能，可以避免此类问题发生。")]),_._v(" "),v("p",[_._v("安全层的主要职责就是"),v("strong",[_._v("对发起的HTTP请求的数据进行加密操作")]),_._v(" 和 "),v("strong",[_._v("对接收到的HTTP的内容进行解密操作")]),_._v("。")]),_._v(" "),v("h3",{attrs:{id:"_2-tls-ssl的工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-tls-ssl的工作原理"}},[_._v("#")]),_._v(" 2. TLS/SSL的工作原理")]),_._v(" "),v("p",[v("strong",[_._v("TLS/SSL")]),_._v("全称"),v("strong",[_._v("安全传输层协议")]),_._v("（Transport Layer Security）, 是介于TCP和HTTP之间的一层安全协议，不影响原有的TCP协议和HTTP协议，所以使用HTTPS基本上不需要对HTTP页面进行太多的改造。")]),_._v(" "),v("p",[_._v("TLS/SSL的功能实现主要依赖三类基本算法："),v("strong",[_._v("散列函数hash")]),_._v("、"),v("strong",[_._v("对称加密")]),_._v("、"),v("strong",[_._v("非对称加密")]),_._v("。这三类算法的作用如下：")]),_._v(" "),v("ul",[v("li",[_._v("基于散列函数验证信息的完整性")]),_._v(" "),v("li",[_._v("对称加密算法采用协商的秘钥对数据加密")]),_._v(" "),v("li",[_._v("非对称加密实现身份认证和秘钥协商")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5696ee8ccb0d44b08b812a7c964695b7~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),_._v(" "),v("h4",{attrs:{id:"_1-散列函数hash"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-散列函数hash"}},[_._v("#")]),_._v(" （1）散列函数hash")]),_._v(" "),v("p",[_._v("常见的散列函数有MD5、SHA1、SHA256。该函数的特点是单向不可逆，对输入数据非常敏感，输出的长度固定，任何数据的修改都会改变散列函数的结果，可以用于防止信息篡改并验证数据的完整性。")]),_._v(" "),v("p",[v("strong",[_._v("特点：")]),_._v(" 在信息传输过程中，散列函数不能三都实现信息防篡改，由于传输是明文传输，中间人可以修改信息后重新计算信息的摘要，所以需要对传输的信息和信息摘要进行加密。")]),_._v(" "),v("h4",{attrs:{id:"_2-对称加密"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-对称加密"}},[_._v("#")]),_._v(" （2）对称加密")]),_._v(" "),v("p",[_._v("对称加密的方法是，双方使用同一个秘钥对数据进行加密和解密。但是对称加密的存在一个问题，就是如何保证秘钥传输的安全性，因为秘钥还是会通过网络传输的，一旦秘钥被其他人获取到，那么整个加密过程就毫无作用了。 这就要用到非对称加密的方法。")]),_._v(" "),v("p",[_._v("常见的对称加密算法有AES-CBC、DES、3DES、AES-GCM等。相同的秘钥可以用于信息的加密和解密。掌握秘钥才能获取信息，防止信息窃听，其通讯方式是一对一。")]),_._v(" "),v("p",[v("strong",[_._v("特点：")]),_._v(" 对称加密的优势就是信息传输使用一对一，需要共享相同的密码，密码的安全是保证信息安全的基础，服务器和N个客户端通信，需要维持N个密码记录且不能修改密码。")]),_._v(" "),v("h4",{attrs:{id:"_3-非对称加密"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-非对称加密"}},[_._v("#")]),_._v(" （3）非对称加密")]),_._v(" "),v("p",[_._v("非对称加密的方法是，我们拥有两个秘钥，一个是公钥，一个是私钥。公钥是公开的，私钥是保密的。用私钥加密的数据，只有对应的公钥才能解密，用公钥加密的数据，只有对应的私钥才能解密。我们可以将公钥公布出去，任何想和我们通信的客户， 都可以使用我们提供的公钥对数据进行加密，这样我们就可以使用私钥进行解密，这样就能保证数据的安全了。但是非对称加密有一个缺点就是加密的过程很慢，因此如果每次通信都使用非对称加密的方式的话，反而会造成等待时间过长的问题。")]),_._v(" "),v("p",[_._v("常见的非对称加密算法有RSA、ECC、DH等。秘钥成对出现，一般称为公钥（公开）和私钥（保密）。公钥加密的信息只有私钥可以解开，私钥加密的信息只能公钥解开，因此掌握公钥的不同客户端之间不能相互解密信息，只能和服务器进行加密通信，服务器可以实现一对多的的通信，客户端也可以用来验证掌握私钥的服务器的身份。")]),_._v(" "),v("p",[v("strong",[_._v("特点：")]),_._v(" 非对称加密的特点就是信息一对多，服务器只需要维持一个私钥就可以和多个客户端进行通信，但服务器发出的信息能够被所有的客户端解密，且该算法的计算复杂，加密的速度慢。")]),_._v(" "),v("p",[_._v("综合上述算法特点，TLS/SSL的工作方式就是客户端使用非对称加密与服务器进行通信，实现身份的验证并协商对称加密使用的秘钥。对称加密算法采用协商秘钥对信息以及信息摘要进行加密通信，不同节点之间采用的对称秘钥不同，从而保证信息只能通信双方获取。这样就解决了两个方法各自存在的问题。")]),_._v(" "),v("h3",{attrs:{id:"_3-数字证书是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-数字证书是什么"}},[_._v("#")]),_._v(" 3. 数字证书是什么？")]),_._v(" "),v("p",[_._v("现在的方法也不一定是安全的，因为没有办法确定得到的公钥就一定是安全的公钥。可能存在一个中间人，截取了对方发给我们的公钥，然后将他自己的公钥发送给我们，当我们使用他的公钥加密后发送的信息，就可以被他用自己的私钥解密。然后他伪装成我们以同样的方法向对方发送信息，这样我们的信息就被窃取了，然而自己还不知道。为了解决这样的问题，可以使用数字证书。")]),_._v(" "),v("p",[_._v("首先使用一种 Hash 算法来对公钥和其他信息进行加密，生成一个信息摘要，然后让有公信力的认证中心（简称 CA ）用它的私钥对消息摘要加密，形成签名。最后将原始的信息和签名合在一起，称为数字证书。当接收方收到数字证书的时候，先根据原始信息使用同样的 Hash 算法生成一个摘要，然后使用公证处的公钥来对数字证书中的摘要进行解密，最后将解密的摘要和生成的摘要进行对比，就能发现得到的信息是否被更改了。")]),_._v(" "),v("p",[_._v("这个方法最要的是认证中心的可靠性，一般浏览器里会内置一些顶层的认证中心的证书，相当于我们自动信任了他们，只有这样才能保证数据的安全。 "),v("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90da1f506e7040aaba5e1536c1f6c373~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),_._v(" "),v("h3",{attrs:{id:"_4-https通信-握手-过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-https通信-握手-过程"}},[_._v("#")]),_._v(" 4. HTTPS通信（握手）过程")]),_._v(" "),v("p",[_._v("HTTPS的通信过程如下：")]),_._v(" "),v("ol",[v("li",[_._v("客户端向服务器发起请求，请求中包含使用的协议版本号、生成的一个随机数、以及客户端支持的加密方法。")]),_._v(" "),v("li",[_._v("服务器端接收到请求后，确认双方使用的加密方法、并给出服务器的证书、以及一个服务器生成的随机数。")]),_._v(" "),v("li",[_._v("客户端确认服务器证书有效后，生成一个新的随机数，并使用数字证书中的公钥，加密这个随机数，然后发给服 务器。并且还会提供一个前面所有内容的 hash 的值，用来供服务器检验。")]),_._v(" "),v("li",[_._v("服务器使用自己的私钥，来解密客户端发送过来的随机数。并提供前面所有内容的 hash 值来供客户端检验。")]),_._v(" "),v("li",[_._v("客户端和服务器端根据约定的加密方法使用前面的三个随机数，生成对话秘钥，以后的对话过程都使用这个秘钥来加密信息。")])]),_._v(" "),v("h3",{attrs:{id:"_5-https的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-https的特点"}},[_._v("#")]),_._v(" 5. HTTPS的特点")]),_._v(" "),v("p",[_._v("HTTPS的"),v("strong",[_._v("优点")]),_._v("如下：")]),_._v(" "),v("ul",[v("li",[_._v("使用HTTPS协议可以认证用户和服务器，确保数据发送到正确的客户端和服务器；")]),_._v(" "),v("li",[_._v("使用HTTPS协议可以进行加密传输、身份认证，通信更加安全，防止数据在传输过程中被窃取、修改，确保数据安全性；")]),_._v(" "),v("li",[_._v("HTTPS是现行架构下最安全的解决方案，虽然不是绝对的安全，但是大幅增加了中间人攻击的成本；")])]),_._v(" "),v("p",[_._v("HTTPS的"),v("strong",[_._v("缺点")]),_._v("如下：")]),_._v(" "),v("ul",[v("li",[_._v("HTTPS需要做服务器和客户端双方的加密个解密处理，耗费更多服务器资源，过程复杂；")]),_._v(" "),v("li",[_._v("HTTPS协议握手阶段比较费时，增加页面的加载时间；")]),_._v(" "),v("li",[_._v("SSL证书是收费的，功能越强大的证书费用越高；")]),_._v(" "),v("li",[_._v("HTTPS连接服务器端资源占用高很多，支持访客稍多的网站需要投入更大的成本；")]),_._v(" "),v("li",[_._v("SSL证书需要绑定IP，不能再同一个IP上绑定多个域名。")])]),_._v(" "),v("h3",{attrs:{id:"_6-https是如何保证安全的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-https是如何保证安全的"}},[_._v("#")]),_._v(" 6. "),v("strong",[_._v("HTTPS")]),_._v("是如何保证安全的？")]),_._v(" "),v("p",[_._v("先理解两个概念：")]),_._v(" "),v("ul",[v("li",[_._v("对称加密：即通信的双⽅都使⽤同⼀个秘钥进⾏加解密，对称加密虽然很简单性能也好，但是⽆法解决⾸次把秘钥发给对⽅的问题，很容易被⿊客拦截秘钥。")]),_._v(" "),v("li",[_._v("⾮对称加密：")])]),_._v(" "),v("ol",[v("li",[_._v("私钥 + 公钥= 密钥对")]),_._v(" "),v("li",[_._v("即⽤私钥加密的数据,只有对应的公钥才能解密,⽤公钥加密的数据,只有对应的私钥才能解密")]),_._v(" "),v("li",[_._v("因为通信双⽅的⼿⾥都有⼀套⾃⼰的密钥对,通信之前双⽅会先把⾃⼰的公钥都先发给对⽅")]),_._v(" "),v("li",[_._v("然后对⽅再拿着这个公钥来加密数据响应给对⽅,等到到了对⽅那⾥,对⽅再⽤⾃⼰的私钥进⾏解密")])]),_._v(" "),v("p",[_._v("⾮对称加密虽然安全性更⾼，但是带来的问题就是速度很慢，影响性能。")]),_._v(" "),v("p",[v("strong",[_._v("解决⽅案：")])]),_._v(" "),v("p",[_._v("结合两种加密⽅式，将对称加密的密钥使⽤⾮对称加密的公钥进⾏加密，然后发送出去，接收⽅使⽤私钥进⾏解密得到对称加密的密钥，然后双⽅可以使⽤对称加密来进⾏沟通。")]),_._v(" "),v("p",[_._v("此时⼜带来⼀个问题，中间⼈问题： 如果此时在客户端和服务器之间存在⼀个中间⼈,这个中间⼈只需要把原本双⽅通信互发的公钥,换成⾃⼰的公钥,这样中间⼈就可以轻松解密通信双⽅所发送的所有数据。")]),_._v(" "),v("p",[_._v("所以这个时候需要⼀个安全的第三⽅颁发证书（CA），证明身份的身份，防⽌被中间⼈攻击。 证书中包括：签发者、证书⽤途、使⽤者公钥、使⽤者私钥、使⽤者的HASH算法、证书到期时间等。")]),_._v(" "),v("p",[_._v("但是问题来了，如果中间⼈篡改了证书，那么身份证明是不是就⽆效了？这个证明就⽩买了，这个时候需要⼀个新的技术，数字签名。")]),_._v(" "),v("p",[_._v("数字签名就是⽤CA⾃带的HASH算法对证书的内容进⾏HASH得到⼀个摘要，再⽤CA的私钥加密，最终组成数字签名。当别⼈把他的证书发过来的时候,我再⽤同样的Hash算法,再次⽣成消息摘要，然后⽤CA的公钥对数字签名解密,得到CA创建的消息摘要,两者⼀⽐,就知道中间有没有被⼈篡改了。这个时候就能最⼤程度保证通信的安全了。")]),_._v(" "),v("h2",{attrs:{id:"三、http状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、http状态码"}},[_._v("#")]),_._v(" 三、HTTP状态码")]),_._v(" "),v("p",[_._v("状态码的类别：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[_._v("类别")])]),_._v(" "),v("th",[v("strong",[_._v("原因")])]),_._v(" "),v("th",[v("strong",[_._v("描述")])])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("1xx")]),_._v(" "),v("td",[_._v("Informational(信息性状态码)")]),_._v(" "),v("td",[_._v("接受的请求正在处理")])]),_._v(" "),v("tr",[v("td",[_._v("2xx")]),_._v(" "),v("td",[_._v("Success(成功状态码)")]),_._v(" "),v("td",[_._v("请求正常处理完毕")])]),_._v(" "),v("tr",[v("td",[_._v("3xx")]),_._v(" "),v("td",[_._v("Redirection(重定向状态码)")]),_._v(" "),v("td",[_._v("需要进行附加操作一完成请求")])]),_._v(" "),v("tr",[v("td",[_._v("4xx")]),_._v(" "),v("td",[_._v("Client Error (客户端错误状态码)")]),_._v(" "),v("td",[_._v("服务器无法处理请求")])]),_._v(" "),v("tr",[v("td",[_._v("5xx")]),_._v(" "),v("td",[_._v("Server Error(服务器错误状态码)")]),_._v(" "),v("td",[_._v("服务器处理请求出错")])])])]),_._v(" "),v("h3",{attrs:{id:"_1-2xx-success-成功状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2xx-success-成功状态码"}},[_._v("#")]),_._v(" 1. 2XX (Success 成功状态码)")]),_._v(" "),v("p",[_._v("状态码2XX表示请求被正常处理了。")]),_._v(" "),v("h4",{attrs:{id:"_1-200-ok"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-200-ok"}},[_._v("#")]),_._v(" （1）200 OK")]),_._v(" "),v("p",[_._v("200 OK表示客户端发来的请求被服务器端正常处理了。")]),_._v(" "),v("h4",{attrs:{id:"_2-204-no-content"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-204-no-content"}},[_._v("#")]),_._v(" （2）204 No Content")]),_._v(" "),v("p",[_._v("该状态码表示客户端发送的请求已经在服务器端正常处理了，但是没有返回的内容，响应报文中不包含实体的主体部分。一般在只需要从客户端往服务器端发送信息，而服务器端不需要往客户端发送内容时使用。")]),_._v(" "),v("h4",{attrs:{id:"_3-206-partial-content"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-206-partial-content"}},[_._v("#")]),_._v(" （3）206 Partial Content")]),_._v(" "),v("p",[_._v("该状态码表示客户端进行了范围请求，而服务器端执行了这部分的 GET 请求。响应报文中包含由 Content-Range 指定范围的实体内容。")]),_._v(" "),v("h3",{attrs:{id:"_2-3xx-redirection-重定向状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3xx-redirection-重定向状态码"}},[_._v("#")]),_._v(" 2. 3XX (Redirection 重定向状态码)")]),_._v(" "),v("p",[_._v("3XX 响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。")]),_._v(" "),v("h4",{attrs:{id:"_1-301-moved-permanently"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-301-moved-permanently"}},[_._v("#")]),_._v(" （1）301 Moved Permanently")]),_._v(" "),v("p",[v("strong",[_._v("永久重定向。")]),_._v(" 该状态码表示请求的资源已经被分配了新的 URI，以后应使用资源指定的 URI。新的 URI 会在 HTTP 响应头中的 Location 首部字段指定。若用户已经把原来的URI保存为书签，此时会按照 Location 中新的URI重新保存该书签。同时，搜索引擎在抓取新内容的同时也将旧的网址替换为重定向之后的网址。")]),_._v(" "),v("p",[v("strong",[_._v("使用场景：")])]),_._v(" "),v("ul",[v("li",[_._v("当我们想换个域名，旧的域名不再使用时，用户访问旧域名时用301就重定向到新的域名。其实也是告诉搜索引擎收录的域名需要对新的域名进行收录。")]),_._v(" "),v("li",[_._v("在搜索引擎的搜索结果中出现了不带www的域名，而带www的域名却没有收录，这个时候可以用301重定向来告诉搜索引擎我们目标的域名是哪一个。")])]),_._v(" "),v("h4",{attrs:{id:"_2-302-found"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-302-found"}},[_._v("#")]),_._v(" （2）302 Found")]),_._v(" "),v("p",[v("strong",[_._v("临时重定向。")]),_._v(" 该状态码表示请求的资源被分配到了新的 URI，希望用户（本次）能使用新的 URI 访问资源。和 301 Moved Permanently 状态码相似，但是 302 代表的资源不是被永久重定向，只是临时性质的。也就是说已移动的资源对应的 URI 将来还有可能发生改变。若用户把 URI 保存成书签，但不会像 301 状态码出现时那样去更新书签，而是仍旧保留返回 302 状态码的页面对应的 URI。同时，搜索引擎会抓取新的内容而保留旧的网址。因为服务器返回302代码，搜索引擎认为新的网址只是暂时的。")]),_._v(" "),v("p",[v("strong",[_._v("使用场景：")])]),_._v(" "),v("ul",[v("li",[_._v("当我们在做活动时，登录到首页自动重定向，进入活动页面。")]),_._v(" "),v("li",[_._v("未登陆的用户访问用户中心重定向到登录页面。")]),_._v(" "),v("li",[_._v("访问404页面重新定向到首页。")])]),_._v(" "),v("h4",{attrs:{id:"_3-303-see-other"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-303-see-other"}},[_._v("#")]),_._v(" （3）303 See Other")]),_._v(" "),v("p",[_._v("该状态码表示由于请求对应的资源存在着另一个 URI，应使用 GET 方法定向获取请求的资源。 303 状态码和 302 Found 状态码有着相似的功能，但是 303 状态码明确表示客户端应当采用 GET 方法获取资源。")]),_._v(" "),v("p",[_._v("303 状态码通常作为 PUT 或 POST 操作的返回结果，它表示重定向链接指向的不是新上传的资源，而是另外一个页面，比如消息确认页面或上传进度页面。而请求重定向页面的方法要总是使用 GET。")]),_._v(" "),v("p",[_._v("注意：")]),_._v(" "),v("ul",[v("li",[_._v("当 301、302、303 响应状态码返回时，几乎所有的浏览器都会把 POST 改成GET，并删除请求报文内的主体，之后请求会再次自动发送。")]),_._v(" "),v("li",[_._v("301、302 标准是禁止将 POST 方法变成 GET方法的，但实际大家都会这么做。")])]),_._v(" "),v("h4",{attrs:{id:"_4-304-not-modified"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-304-not-modified"}},[_._v("#")]),_._v(" （4）304 Not Modified")]),_._v(" "),v("p",[v("strong",[_._v("浏览器缓存相关。")]),_._v(" 该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。304 状态码返回时，不包含任何响应的主体部分。304 虽然被划分在 3XX 类别中，但是和重定向没有关系。")]),_._v(" "),v("p",[_._v("带条件的请求（Http 条件请求）：使用 Get方法 请求，请求报文中包含（"),v("code",[_._v("if-match")]),_._v("、"),v("code",[_._v("if-none-match")]),_._v("、"),v("code",[_._v("if-modified-since")]),_._v("、"),v("code",[_._v("if-unmodified-since")]),_._v("、"),v("code",[_._v("if-range")]),_._v("）中任意首部。")]),_._v(" "),v("p",[_._v("状态码304并不是一种错误，而是告诉客户端有缓存，直接使用缓存中的数据。返回页面的只有头部信息，是没有内容部分的，这样在一定程度上提高了网页的性能。")]),_._v(" "),v("h4",{attrs:{id:"_5-307-temporary-redirect"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-307-temporary-redirect"}},[_._v("#")]),_._v(" （5）307 Temporary Redirect")]),_._v(" "),v("p",[v("strong",[_._v("307表示临时重定向。")]),_._v(" 该状态码与 302 Found 有着相同含义，尽管 302 标准禁止 POST 变成 GET，但是实际使用时还是这样做了。")]),_._v(" "),v("p",[_._v("307 会遵守浏览器标准，"),v("strong",[_._v("不会从 POST 变成 GET")]),_._v("。但是对于处理请求的行为时，不同浏览器还是会出现不同的情况。规范要求浏览器继续向 Location 的地址 POST 内容。规范要求浏览器继续向 Location 的地址 POST 内容。")]),_._v(" "),v("h3",{attrs:{id:"_3-4xx-client-error-客户端错误状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-4xx-client-error-客户端错误状态码"}},[_._v("#")]),_._v(" 3. 4XX (Client Error 客户端错误状态码)")]),_._v(" "),v("p",[_._v("4XX 的响应结果表明客户端是发生错误的原因所在。")]),_._v(" "),v("h4",{attrs:{id:"_1-400-bad-request"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-400-bad-request"}},[_._v("#")]),_._v(" （1）400 Bad Request")]),_._v(" "),v("p",[_._v("该状态码表示请求报文中存在语法错误。当错误发生时，需修改请求的内容后再次发送请求。另外，浏览器会像 200 OK 一样对待该状态码。")]),_._v(" "),v("h4",{attrs:{id:"_2-401-unauthorized"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-401-unauthorized"}},[_._v("#")]),_._v(" （2）401 Unauthorized")]),_._v(" "),v("p",[_._v("该状态码表示发送的请求需要有通过 HTTP 认证(BASIC 认证、DIGEST 认证)的认证信息。若之前已进行过一次请求，则表示用户认证失败")]),_._v(" "),v("p",[_._v("返回含有 401 的响应必须包含一个适用于被请求资源的 WWW-Authenticate 首部用以质询(challenge)用户信息。当浏览器初次接收到 401 响应，会弹出认证用的对话窗口。")]),_._v(" "),v("p",[_._v("以下情况会出现401：")]),_._v(" "),v("ul",[v("li",[_._v("401.1 - 登录失败。")]),_._v(" "),v("li",[_._v("401.2 - 服务器配置导致登录失败。")]),_._v(" "),v("li",[_._v("401.3 - 由于 ACL 对资源的限制而未获得授权。")]),_._v(" "),v("li",[_._v("401.4 - 筛选器授权失败。")]),_._v(" "),v("li",[_._v("401.5 - ISAPI/CGI 应用程序授权失败。")]),_._v(" "),v("li",[_._v("401.7 - 访问被 Web 服务器上的 URL 授权策略拒绝。这个错误代码为 IIS 6.0 所专用。")])]),_._v(" "),v("h4",{attrs:{id:"_3-403-forbidden"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-403-forbidden"}},[_._v("#")]),_._v(" （3）403 Forbidden")]),_._v(" "),v("p",[_._v("该状态码表明请求资源的访问被服务器拒绝了，服务器端没有必要给出详细理由，但是可以在响应报文实体的主体中进行说明。进入该状态后，不能再继续进行验证。该访问是永久禁止的，并且与应用逻辑密切相关。")]),_._v(" "),v("p",[_._v("IIS 定义了许多不同的 403 错误，它们指明更为具体的错误原因：")]),_._v(" "),v("ul",[v("li",[_._v("403.1 - 执行访问被禁止。")]),_._v(" "),v("li",[_._v("403.2 - 读访问被禁止。")]),_._v(" "),v("li",[_._v("403.3 - 写访问被禁止。")]),_._v(" "),v("li",[_._v("403.4 - 要求 SSL。")]),_._v(" "),v("li",[_._v("403.5 - 要求 SSL 128。")]),_._v(" "),v("li",[_._v("403.6 - IP 地址被拒绝。")]),_._v(" "),v("li",[_._v("403.7 - 要求客户端证书。")]),_._v(" "),v("li",[_._v("403.8 - 站点访问被拒绝。")]),_._v(" "),v("li",[_._v("403.9 - 用户数过多。")]),_._v(" "),v("li",[_._v("403.10 - 配置无效。")]),_._v(" "),v("li",[_._v("403.11 - 密码更改。")]),_._v(" "),v("li",[_._v("403.12 - 拒绝访问映射表。")]),_._v(" "),v("li",[_._v("403.13 - 客户端证书被吊销。")]),_._v(" "),v("li",[_._v("403.14 - 拒绝目录列表。")]),_._v(" "),v("li",[_._v("403.15 - 超出客户端访问许可。")]),_._v(" "),v("li",[_._v("403.16 - 客户端证书不受信任或无效。")]),_._v(" "),v("li",[_._v("403.17 - 客户端证书已过期或尚未生效")]),_._v(" "),v("li",[_._v("403.18 - 在当前的应用程序池中不能执行所请求的 URL。这个错误代码为 IIS 6.0 所专用。")]),_._v(" "),v("li",[_._v("403.19 - 不能为这个应用程序池中的客户端执行 CGI。这个错误代码为 IIS 6.0 所专用。")]),_._v(" "),v("li",[_._v("403.20 - Passport 登录失败。这个错误代码为 IIS 6.0 所专用。")])]),_._v(" "),v("h4",{attrs:{id:"_4-404-not-found"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-404-not-found"}},[_._v("#")]),_._v(" （4）404 Not Found")]),_._v(" "),v("p",[_._v("该状态码表明服务器上无法找到请求的资源。除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。 以下情况会出现404：")]),_._v(" "),v("ul",[v("li",[_._v("404.0 -（无） – 没有找到文件或目录。")]),_._v(" "),v("li",[_._v("404.1 - 无法在所请求的端口上访问 Web 站点。")]),_._v(" "),v("li",[_._v("404.2 - Web 服务扩展锁定策略阻止本请求。")]),_._v(" "),v("li",[_._v("404.3 - MIME 映射策略阻止本请求。")])]),_._v(" "),v("h4",{attrs:{id:"_5-405-method-not-allowed"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-405-method-not-allowed"}},[_._v("#")]),_._v(" （5）405 Method Not Allowed")]),_._v(" "),v("p",[_._v("该状态码表示客户端请求的方法虽然能被服务器识别，但是服务器禁止使用该方法。GET 和 HEAD 方法，服务器应该总是允许客户端进行访问。客户端可以通过 OPTIONS 方法（预检）来查看服务器允许的访问方法, 如下")]),_._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[_._v("Access"),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("-")]),_._v("Control"),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("-")]),_._v("Allow"),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("-")]),_._v("Methods"),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v(":")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[_._v("GET")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),v("span",{pre:!0,attrs:{class:"token constant"}},[_._v("HEAD")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),v("span",{pre:!0,attrs:{class:"token constant"}},[_._v("PUT")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),v("span",{pre:!0,attrs:{class:"token constant"}},[_._v("PATCH")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),v("span",{pre:!0,attrs:{class:"token constant"}},[_._v("POST")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),v("span",{pre:!0,attrs:{class:"token constant"}},[_._v("DELETE")]),_._v("\n复制代码\n")])])]),v("h3",{attrs:{id:"_4-5xx-server-error-服务器错误状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-5xx-server-error-服务器错误状态码"}},[_._v("#")]),_._v(" 4. 5XX (Server Error 服务器错误状态码)")]),_._v(" "),v("p",[_._v("5XX 的响应结果表明服务器本身发生错误.")]),_._v(" "),v("h4",{attrs:{id:"_1-500-internal-server-error"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-500-internal-server-error"}},[_._v("#")]),_._v(" （1）500 Internal Server Error")]),_._v(" "),v("p",[_._v("该状态码表明服务器端在执行请求时发生了错误。也有可能是 Web 应用存在的 bug 或某些临时的故障。")]),_._v(" "),v("h4",{attrs:{id:"_2-502-bad-gateway"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-502-bad-gateway"}},[_._v("#")]),_._v(" （2）502 Bad Gateway")]),_._v(" "),v("p",[_._v("该状态码表明扮演网关或代理角色的服务器，从上游服务器中接收到的响应是无效的。注意，502 错误通常不是客户端能够修复的，而是需要由途经的 Web 服务器或者代理服务器对其进行修复。以下情况会出现502：")]),_._v(" "),v("ul",[v("li",[_._v("502.1 - CGI （通用网关接口）应用程序超时。")]),_._v(" "),v("li",[_._v("502.2 - CGI （通用网关接口）应用程序出错。")])]),_._v(" "),v("h4",{attrs:{id:"_3-503-service-unavailable"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-503-service-unavailable"}},[_._v("#")]),_._v(" （3）503 Service Unavailable")]),_._v(" "),v("p",[_._v("该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。如果事先得知解除以上状况需要的时间，最好写入 RetryAfter 首部字段再返回给客户端。")]),_._v(" "),v("p",[v("strong",[_._v("使用场景：")])]),_._v(" "),v("ul",[v("li",[_._v("服务器停机维护时，主动用503响应请求；")]),_._v(" "),v("li",[_._v("nginx 设置限速，超过限速，会返回503。")])]),_._v(" "),v("h4",{attrs:{id:"_4-504-gateway-timeout"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-504-gateway-timeout"}},[_._v("#")]),_._v(" （4）504 Gateway Timeout")]),_._v(" "),v("p",[_._v("该状态码表示网关或者代理的服务器无法在规定的时间内获得想要的响应。他是HTTP 1.1中新加入的。")]),_._v(" "),v("p",[_._v("使用场景：代码执行时间超时，或者发生了死循环。")]),_._v(" "),v("h3",{attrs:{id:"_5-总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结"}},[_._v("#")]),_._v(" 5. 总结")]),_._v(" "),v("p",[v("strong",[_._v("（1）2XX 成功")])]),_._v(" "),v("ul",[v("li",[_._v("200 OK，表示从客户端发来的请求在服务器端被正确处理")]),_._v(" "),v("li",[_._v("204 No content，表示请求成功，但响应报文不含实体的主体部分")]),_._v(" "),v("li",[_._v("205 Reset Content，表示请求成功，但响应报文不含实体的主体部分，但是与 204 响应不同在于要求请求方重置内容")]),_._v(" "),v("li",[_._v("206 Partial Content，进行范围请求")])]),_._v(" "),v("p",[v("strong",[_._v("（2）3XX 重定向")])]),_._v(" "),v("ul",[v("li",[_._v("301 moved permanently，永久性重定向，表示资源已被分配了新的 URL")]),_._v(" "),v("li",[_._v("302 found，临时性重定向，表示资源临时被分配了新的 URL")]),_._v(" "),v("li",[_._v("303 see other，表示资源存在着另一个 URL，应使用 GET 方法获取资源")]),_._v(" "),v("li",[_._v("304 not modified，表示服务器允许访问资源，但因发生请求未满足条件的情况")]),_._v(" "),v("li",[_._v("307 temporary redirect，临时重定向，和302含义类似，但是期望客户端保持请求方法不变向新的地址发出请求")])]),_._v(" "),v("p",[v("strong",[_._v("（3）4XX 客户端错误")])]),_._v(" "),v("ul",[v("li",[_._v("400 bad request，请求报文存在语法错误")]),_._v(" "),v("li",[_._v("401 unauthorized，表示发送的请求需要有通过 HTTP 认证的认证信息")]),_._v(" "),v("li",[_._v("403 forbidden，表示对请求资源的访问被服务器拒绝")]),_._v(" "),v("li",[_._v("404 not found，表示在服务器上没有找到请求的资源")])]),_._v(" "),v("p",[v("strong",[_._v("（4）5XX 服务器错误")])]),_._v(" "),v("ul",[v("li",[_._v("500 internal sever error，表示服务器端在执行请求时发生了错误")]),_._v(" "),v("li",[_._v("501 Not Implemented，表示服务器不支持当前请求所需要的某个功能")]),_._v(" "),v("li",[_._v("503 service unavailable，表明服务器暂时处于超负载或正在停机维护，无法处理请求")])]),_._v(" "),v("h3",{attrs:{id:"_6-同样是重定向-307-303-302的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-同样是重定向-307-303-302的区别"}},[_._v("#")]),_._v(" 6. 同样是重定向，"),v("strong",[_._v("307")]),_._v("，"),v("strong",[_._v("303")]),_._v("，"),v("strong",[_._v("302")]),_._v("的区别？")]),_._v(" "),v("p",[_._v("302是http1.0的协议状态码，在http1.1版本的时候为了细化302状态码⼜出来了两个303和307。 303明确表示客户端应当采⽤get⽅法获取资源，他会把POST请求变为GET请求进⾏重定向。 307会遵照浏览器标准，不会从post变为get。")])])}),[],!1,null,null,null);t.default=r.exports}}]);