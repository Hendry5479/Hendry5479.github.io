(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{400:function(t,s,n){"use strict";n.r(s);var v=n(45),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("原始类型Primitive：boolean、null、undefined、number、string、symbol")]),t._v(" "),n("p",[t._v("原始类型的坑：")]),t._v(" "),n("ol",[n("li",[t._v("没有函数可调用，比如调用undefined.toString()时会强转类型")]),t._v(" "),n("li",[t._v("number是浮点类型的bug")]),t._v(" "),n("li",[t._v("string类型不可变")]),t._v(" "),n("li",[t._v("typeof null 是 object的bug：因为js最初使用32位系统，000表示对象，而null是全0，所以错误判断，兼容历史代码不修复")])]),t._v(" "),n("p",[t._v("对象类型：在栈内存中存储地址，计算机在堆内存中存储值。")]),t._v(" "),n("p",[t._v("typeof 和 instanceof")]),t._v(" "),n("p",[t._v("typeof判断原始类型，instanceof判断对象类型")]),t._v(" "),n("p",[t._v("类型转换")]),t._v(" "),n("p",[t._v("转boolean")]),t._v(" "),n("p",[t._v("​\tundefined、null、false、NaN、’‘， 0， -0为false")]),t._v(" "),n("p",[t._v("​\t负数也不是false")]),t._v(" "),n("p",[t._v("对象转原始类型：调用[[ToPrimitive]]函数")]),t._v(" "),n("p",[t._v("x.toString()")]),t._v(" "),n("p",[t._v("或者x.valueOf()  + x.toString()")]),t._v(" "),n("p",[t._v("this")]),t._v(" "),n("p",[t._v("直接调用：window")]),t._v(" "),n("p",[t._v("谁调用了就是谁")]),t._v(" "),n("p",[t._v("new的方式this永远在实例上")]),t._v(" "),n("p",[t._v("箭头函数中没有this，只取决于包裹箭头函数的第一个函数的this，对使用bind这类函数无效")]),t._v(" "),n("p",[t._v("bind函数的this取决于第一个参数，为空则指向window")]),t._v(" "),n("p",[t._v("解决for i 用var定义函数的问题")]),t._v(" "),n("p",[n("strong",[t._v("深浅拷贝")])]),t._v(" "),n("p",[n("strong",[t._v("浅拷贝")])]),t._v(" "),n("p",[n("strong",[t._v("Object.assign")])]),t._v(" "),n("p",[t._v("会触发es6的setter")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hendry'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Aries'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("展开运算符")])]),t._v(" "),n("p",[t._v("​\t会复制es6的Symbol属性")]),t._v(" "),n("p",[n("strong",[t._v("lodash _clone()")])]),t._v(" "),n("p",[n("strong",[t._v("Array.prototype.concat()")])]),t._v(" "),n("p",[n("strong",[t._v("Array.prototype.slice()")])]),t._v(" "),n("p",[n("strong",[t._v("深拷贝的实现方式")])]),t._v(" "),n("p",[n("strong",[t._v("JSON.parse(JSON.stringify())")])]),t._v(" "),n("p",[t._v("​\t缺点：")]),t._v(" "),n("ul",[n("li",[t._v("忽略undefined和symbol、函数（对象忽略，数组变成null）；因为序列化会忽略。")]),t._v(" "),n("li",[t._v("正则变成{ }；")]),t._v(" "),n("li",[t._v("无法解决循环引用")])]),t._v(" "),n("p",[t._v("​")]),t._v(" "),n("p",[n("strong",[t._v("lodsash的deepClone")])]),t._v(" "),n("p",[n("strong",[t._v("自实现深拷贝")])]),t._v(" "),n("p",[t._v("思路：判断类型，使用判断循环引用，根据类型设置result。避免循环应用。开始循环，保证不是原型属性，递归调用deepClone。")]),t._v(" "),n("ol",[n("li")]),t._v(" "),n("p",[n("strong",[t._v("var、let、const")])]),t._v(" "),n("p",[t._v("var变量挂载在window，变量和函数的声明会提升，且函数优于变量")]),t._v(" "),n("p",[t._v("继承")]),t._v(" "),n("p",[t._v("组合继承")]),t._v(" "),n("p",[t._v("​")]),t._v(" "),n("p",[t._v("​")])])}),[],!1,null,null,null);s.default=_.exports}}]);