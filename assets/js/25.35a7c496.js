(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{409:function(v,_,e){"use strict";e.r(_);var t=e(45),l=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("增加功能")]),v._v(" "),e("p",[v._v("分类：类、属性、参数")]),v._v(" "),e("p",[v._v("NgModule：容器，导出特定功能供其他Module使用")]),v._v(" "),e("ul",[e("li",[v._v("providers：声明模块内组件需要的服务")]),v._v(" "),e("li",[v._v("declarations：属于这个模块的组件指令模块")]),v._v(" "),e("li",[v._v("imports：依赖的其他模块")]),v._v(" "),e("li",[v._v("exports：需要导出的组件指令管道")]),v._v(" "),e("li",[v._v("entryComponents：组件集合，Angular会创建ComponentFactory并保存进ComponentFactoryResolver")]),v._v(" "),e("li",[v._v("bootstrap：根组件，主视图，根模块才需要设置")]),v._v(" "),e("li",[v._v("schemas：不属于angular的web组件\n"),e("ul",[e("li",[v._v("CUSTOM_ELEMENTS_SCHEMA：可以使用任何自定义元素")])])]),v._v(" "),e("li",[v._v("jit：选择JIT动态编译或AOT运行时编译")])]),v._v(" "),e("p",[v._v("​")]),v._v(" "),e("p",[v._v("模块内组件默认可见，外部组件只能看见export内容")]),v._v(" "),e("p",[v._v("Directive：指令一般用于控制组件或DOM的行为")]),v._v(" "),e("p",[v._v("​\t结构型：增添DOM改变布局 NgIf")]),v._v(" "),e("p",[v._v("​\t属性型：改变元素外观和行为 NgClass")]),v._v(" "),e("ul",[e("li",[v._v("selector：css选择器名，用于在html中标记该指令，触发实例化")]),v._v(" "),e("li",[v._v("inputs、outputs不推荐")]),v._v(" "),e("li",[v._v("host：把类属性映射到宿主元素的绑定")]),v._v(" "),e("li",[v._v("providers：提供的服务集合")]),v._v(" "),e("li",[v._v("exportAs：把该指令赋值给一或多个名字，在html中使用")]),v._v(" "),e("li",[v._v("queries：配置注入该指令的一些查询")])]),v._v(" "),e("p",[v._v("Component：继承自Directive")]),v._v(" "),e("ul",[e("li",[v._v("changeDetection：变更策略\n"),e("ul",[e("li",[v._v("组件实例化后，Angular会创建变更检测机制")]),v._v(" "),e("li",[v._v("OnPush（CheckOnce）")]),v._v(" "),e("li",[v._v("Default（CheckAlways）")])])]),v._v(" "),e("li",[v._v("animations：多个trigger()的调用，包括state和transition定义")]),v._v(" "),e("li",[v._v("encapsulation：样式封装策略\n"),e("ul",[e("li",[v._v("Native：使用 Shadow DOM。它只在原生支持 Shadow DOM的平台上才能工作)")]),v._v(" "),e("li",[v._v("Emulated：使用垫片（shimmed)CSS来模拟原生行为)；默认值，如果没有指定style，会切换到None")]),v._v(" "),e("li",[v._v("None：使用全局CSS，不做封装。如果没有提供，该值就会从CompilerOptions中获取它")])])]),v._v(" "),e("li",[v._v("entryComponents")])]),v._v(" "),e("p",[v._v("Pipe：传输，映射")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[v._v("+ name：html绑定时使用\n+ pure：默认为true，在输入参数变更时才调用；推荐使用纯管道。\n")])])]),e("p",[v._v("Injectable：服务类")]),v._v(" "),e("ul",[e("li",[v._v("provideIn：声明当前服务注入的地方")])]),v._v(" "),e("p",[v._v("​")])])}),[],!1,null,null,null);_.default=l.exports}}]);