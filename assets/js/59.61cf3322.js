(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{423:function(t,r,a){"use strict";a.r(r);var e=a(45),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"实现mini-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现mini-router"}},[t._v("#")]),t._v(" 实现mini-router")]),t._v(" "),a("h1",{attrs:{id:"表单验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单验证"}},[t._v("#")]),t._v(" 表单验证")]),t._v(" "),a("h2",{attrs:{id:"二-设计思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-设计思路"}},[t._v("#")]),t._v(" 二 设计思路")]),t._v(" "),a("h3",{attrs:{id:"_1-表单组件层模型设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-表单组件层模型设计"}},[t._v("#")]),t._v(" 1 表单组件层模型设计")]),t._v(" "),a("h4",{attrs:{id:"form"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#form"}},[t._v("#")]),t._v(" Form")]),t._v(" "),a("p",[t._v("表单状态管理，提交重置验证表单")]),t._v(" "),a("p",[t._v("通过"),a("strong",[t._v("react context")]),t._v(" 保存下发状态")]),t._v(" "),a("p",[t._v("与原生form功能一致")]),t._v(" "),a("h4",{attrs:{id:"formitem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formitem"}},[t._v("#")]),t._v(" FormItem")]),t._v(" "),a("p",[t._v("状态收集，传递给Form组件")]),t._v(" "),a("p",[t._v("控制表单组件，传递value，监听change")]),t._v(" "),a("p",[t._v("提供label和验证结果的UI层")]),t._v(" "),a("h4",{attrs:{id:"表单空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单空间"}},[t._v("#")]),t._v(" 表单空间")]),t._v(" "),a("p",[t._v("与上述表单验证系统零耦合")]),t._v(" "),a("p",[t._v("表单控件不需要自己绑定事件，统一托管于FormItem")]),t._v(" "),a("h3",{attrs:{id:"_2-状态层设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-状态层设计"}},[t._v("#")]),t._v(" 2 状态层设计")]),t._v(" "),a("p",[t._v("保存信息：引用promise的三种状态")]),t._v(" "),a("ul",[a("li",[t._v("resolve -> 成功状态，表单验证成功 resolve")]),t._v(" "),a("li",[t._v("reject -> 失败状态，表单验证失败reject")]),t._v(" "),a("li",[t._v("pending -> 待验证状态，初始化，或者重新赋予")])]),t._v(" "),a("p",[t._v("数据结构：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  \n    TODO: 数据结构\n    model = {\n       [name] ->  validate  = {\n           value     -> 表单值    (可以重新设定)\n           rule      -> 验证规则  ( 可以重新设定)\n           required  -> 是否必添 -> 在含有 rule 的情况下默认为 true\n           message   -> 提示消息\n           status    -> 验证状态  resolve -> 成功状态 ｜reject -> 失败状态 ｜ pending -> 待验证状态 |\n       }\n   }\n*/")]),t._v("\n")])])]),a("p",[a("strong",[t._v("状态层最佳保存在Form内部，通过useForm自定义hooks维护表单状态FormStore")])]),t._v(" "),a("h3",{attrs:{id:"_3-通信层设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-通信层设计"}},[t._v("#")]),t._v(" 3 通信层设计")]),t._v(" "),a("h4",{attrs:{id:"改变状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改变状态"}},[t._v("#")]),t._v(" 改变状态")]),t._v(" "),a("p",[t._v("受控组件状态更新流程：")]),t._v(" "),a("p",[t._v("Input表单，onchange，FormItem最先感知到变化，然后通知FormStore，FormStore逻辑处理，将最新的状态发送给FormItem，FormItem再让Input更新最新的值。")]),t._v(" "),a("h4",{attrs:{id:"触发校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发校验"}},[t._v("#")]),t._v(" 触发校验")]),t._v(" "),a("p",[t._v("FormItem层的校验触发，对单个表单item的校验")]),t._v(" "),a("p",[t._v("Form层的校验触发，提交事件，手动触发校验时间")]),t._v(" "),a("ul",[a("li",[t._v("触发submit，通知到FormStore")]),t._v(" "),a("li",[t._v("FormStore对整个表单校验，将表单Item状态"),a("strong",[t._v("异步批量")]),t._v("下发到每个FormItem")]),t._v(" "),a("li",[t._v("FormItem展示校验结果")])]),t._v(" "),a("h1",{attrs:{id:"自定义弹窗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义弹窗"}},[t._v("#")]),t._v(" 自定义弹窗")]),t._v(" "),a("h1",{attrs:{id:"自定义hooks设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义hooks设计"}},[t._v("#")]),t._v(" 自定义hooks设计")]),t._v(" "),a("h1",{attrs:{id:"自定义hooks时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义hooks时间"}},[t._v("#")]),t._v(" 自定义hooks时间")])])}),[],!1,null,null,null);r.default=s.exports}}]);