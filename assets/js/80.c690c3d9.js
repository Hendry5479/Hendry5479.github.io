(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{445:function(t,a,e){"use strict";e.r(a);var s=e(45),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),e("p",[t._v("entry：入口")]),t._v(" "),e("p",[t._v("output：输出结果")]),t._v(" "),e("p",[t._v("module：文件")]),t._v(" "),e("p",[t._v("chunk：模块的集合，用于代码分割合并")]),t._v(" "),e("p",[t._v("loader：代码转换器")]),t._v(" "),e("p",[t._v("plugin：拓展插件，监听广播事件")]),t._v(" "),e("p",[t._v("mode：内置的优化模式")]),t._v(" "),e("p",[t._v("compatibility：兼容")]),t._v(" "),e("h2",{attrs:{id:"依赖图-dependency-graph"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖图-dependency-graph"}},[t._v("#")]),t._v(" 依赖图(dependency graph)")]),t._v(" "),e("p",[t._v("从入口开始递归构建一个依赖关系图，包含所需的模块，然后将所有模块打包为bundle(通常只有一个)，最终被浏览器加载")]),t._v(" "),e("h2",{attrs:{id:"target"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#target"}},[t._v("#")]),t._v(" target")]),t._v(" "),e("p",[t._v("target 设置为node，webpack 将在类 Node.js 环境编译代码。(使用 Node.js 的 require 加载 chunk，而不加载任何内置模块，如 fs 或 path)\n每个 target 都包含各种 deployment（部署）/environment（环境）特定的附加项，以满足其需求")]),t._v(" "),e("p",[t._v("webpack.config.js")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  target"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);