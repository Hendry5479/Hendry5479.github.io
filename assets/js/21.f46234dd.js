(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{405:function(t,v,_){"use strict";_.r(v);var s=_(45),n=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("1、跨标签通讯")]),t._v(" "),_("p",[t._v("1.父页面window.open、子页面postMessage")]),t._v(" "),_("p",[t._v("2.同域下的localStorage，监听onstorage")]),t._v(" "),_("p",[t._v("3.设置共享cookie和轮询检查")]),t._v(" "),_("p",[t._v("2、浏览器架构")]),t._v(" "),_("ul",[_("li",[t._v("用户界面")]),t._v(" "),_("li",[t._v("主进程")]),t._v(" "),_("li",[t._v("内核\n"),_("ul",[_("li",[t._v("渲染引擎")]),t._v(" "),_("li",[t._v("JS 引擎\n"),_("ul",[_("li",[t._v("执行栈")])])]),t._v(" "),_("li",[t._v("事件触发线程\n"),_("ul",[_("li",[t._v("消息队列\n"),_("ul",[_("li",[t._v("微任务")]),t._v(" "),_("li",[t._v("宏任务")])])])])]),t._v(" "),_("li",[t._v("网络异步线程")]),t._v(" "),_("li",[t._v("定时器线程")])])])]),t._v(" "),_("p",[_("strong",[t._v("3、事件循环")])]),t._v(" "),_("p",[_("strong",[t._v("过程")])]),t._v(" "),_("p",[t._v("每次循环叫做一个tick")]),t._v(" "),_("p",[t._v("执行栈选择宏任务script进入任务队列，执行所有同步代码")]),t._v(" "),_("p",[t._v("然后检查是否有微任务，并清空微任务队列")]),t._v(" "),_("p",[t._v("浏览器可能会渲染页面")]),t._v(" "),_("p",[t._v("开始下一轮tick，执行宏任务中的异步代码，例如回调或者定时器")]),t._v(" "),_("p",[t._v("vue nextTick就是在下一轮tick中微任务中执行传入的回调函数，基于事件循环实现的")]),t._v(" "),_("p",[_("strong",[t._v("宏任务与微任务的区别")])]),t._v(" "),_("p",[t._v("es6中，宏任务叫task，微任务叫job")]),t._v(" "),_("p",[t._v("宏任务由主机生成，微任务由js引擎生成；宏任务可以触发新的一轮tick")]),t._v(" "),_("p",[_("strong",[t._v("微任务的意义")])]),t._v(" "),_("p",[t._v("在es3，js引擎本身无法生成异步请求，所以没有微任务")]),t._v(" "),_("p",[t._v("在es5，promise被引入js，js引擎本身可以生成异步任务而不需要浏览器")]),t._v(" "),_("p",[t._v("宏任务和微任务都可以异步操作，微任务解决了什么问题？")]),t._v(" "),_("p",[t._v("主线程有可能执行大量任务，异步回调有可能等待很长时间，微任务的诞生是一种实现实时性和高效之间的平衡。")]),t._v(" "),_("p",[_("strong",[t._v("4、url到展示的过程")])]),t._v(" "),_("ol",[_("li",[t._v("查找缓存（浏览器、系统、路由）"),_("strong",[t._v("（准备回答）")])]),t._v(" "),_("li",[t._v("DNS解析（提一嘴基于UDP，为啥基于UDP，提一下迭代、递归，两者差异；）")]),t._v(" "),_("li",[t._v("建立TCP三次握手")]),t._v(" "),_("li",[t._v("发送HTTP请求，报文作为第三次握手的数据，请求分析url（可以提一下设置请求报文）")]),t._v(" "),_("li",[t._v("中间应该涉及强弱缓存策略？")]),t._v(" "),_("li",[t._v("浏览器返回文件")]),t._v(" "),_("li",[t._v("关闭TCP四次回收")]),t._v(" "),_("li",[t._v("渲染：DOM树和CSSOM树，生成渲染树，布局计算位置，遍历渲染树绘制")])]),t._v(" "),_("p",[t._v("5、重绘回流")]),t._v(" "),_("p",[t._v("元素样式变化时的浏览器更新动作。")]),t._v(" "),_("p",[t._v("重绘：元素的样式改变不影响布局，重绘")]),t._v(" "),_("p",[t._v("回流：元素的尺寸结构变化，重新计算重新布局，渲染页面")]),t._v(" "),_("p",[t._v("回流的操作：初次渲染、窗口大小变化、增删元素、CSS伪类添加、查询调用属性")]),t._v(" "),_("p",[t._v("最佳实践：")]),t._v(" "),_("p",[t._v("css：避免table")]),t._v(" "),_("p",[t._v("js：避免频繁操作，将操作汇总后一并修改。")]),t._v(" "),_("p",[t._v("6、存储")]),t._v(" "),_("p",[t._v("短暂：内存")]),t._v(" "),_("p",[t._v("持久：cookie、localStorage、sessionStorage、indexDB")]),t._v(" "),_("p",[_("strong",[t._v("7、Web worker")])]),t._v(" "),_("p",[t._v("web worker 是浏览器js的多线程环境，将任务分配到worker线程并行运行，消息机制相互通信")]),t._v(" "),_("p",[_("strong",[t._v("8、v8垃圾回收")])]),t._v(" "),_("p",[t._v("两种GC方法（特点，缺点）")]),t._v(" "),_("p",[t._v("V8GC（优化点）")]),t._v(" "),_("p",[t._v("js引用类型保存在堆内存中，若没有了引用关系，则是不可达对象，需要被清理，否则会内存不足")]),t._v(" "),_("p",[_("strong",[t._v("标记清除：活动对象打标记，清除阶段时销毁无标记对象")])]),t._v(" "),_("p",[t._v("​\t引擎GC时从根节点（有多个）遍历内存中的对象打标记")]),t._v(" "),_("p",[t._v("​\t分配内存的三种策略：First-fit、Best-fit、Worst-fit")]),t._v(" "),_("p",[t._v("​\t**特点：**简单，但是有内存碎片、慢")]),t._v(" "),_("p",[t._v("​\t"),_("strong",[t._v("标记整理")]),t._v("法：标记结束后将活动对象移动到一端，然后清理")]),t._v(" "),_("p",[_("strong",[t._v("引用计数法")]),t._v("：被引用、赋给另一个变量时+1，被覆盖则-1；0则销毁")]),t._v(" "),_("p",[t._v("​\t缺点：1、循环引用无法解决；2、计数器占用内存大")]),t._v(" "),_("p",[t._v("​\tA和B相互引用，则引用数量都是2，不被清理")]),t._v(" "),_("p",[t._v("​\t标记清除策略的话，在函数结束后，两个对象都不在作用域中，都被清除掉。")]),t._v(" "),_("p",[_("strong",[t._v("V8的GC优化：基于标记清除的分代式GC")])]),t._v(" "),_("p",[t._v("新生代的特点是存活时间短、比较小；因此将内存区域区分为新老生代，使用不同频率的GC，优化性能")]),t._v(" "),_("p",[_("strong",[t._v("新生代的GC")])]),t._v(" "),_("p",[t._v("​\t将新生代的堆内存分为使用区和空闲区，标记一次后，将活动对象转去空闲区，然后清空使用区，反转")]),t._v(" "),_("p",[t._v("​\t如果多次GC仍然存活，或者对象比较大，则转去老生代")]),t._v(" "),_("p",[_("strong",[t._v("老生代GC")])]),t._v(" "),_("p",[t._v("​\t不用复制法，直接使用标记清除整理法")]),t._v(" "),_("p",[_("strong",[t._v("并行回收")])]),t._v(" "),_("p",[t._v("Stop-The-World：全停顿，JS脚本等待GC后恢复运行的行为")]),t._v(" "),_("p",[t._v("GC会造成stw，而并行回收则是在GC时引入辅助线程提高效率")]),t._v(" "),_("p",[t._v("并行回收依然会停顿，但是会减少耗时，而且不用考虑引用关系的改变")]),t._v(" "),_("p",[_("strong",[t._v("新生代GC就采用并行回收")])]),t._v(" "),_("p",[_("strong",[t._v("增量标记和懒清理")])]),t._v(" "),_("p",[t._v("并行回收依然全停顿，对于老生代而言耗时依然很久")]),t._v(" "),_("p",[t._v("增量标记：将GC变成可中断")]),t._v(" "),_("p",[_("strong",[t._v("中断后恢复的方法：")])]),t._v(" "),_("p",[_("strong",[t._v("三色标记法：")])]),t._v(" "),_("p",[t._v("​\t白色：无活动；灰色：自身标记、成员未标记；黑色：已全标记")]),t._v(" "),_("p",[t._v("​\t每次中断恢复时就从灰色标记开始执行")]),t._v(" "),_("p",[_("strong",[t._v("写屏障：")])]),t._v(" "),_("p",[t._v("​\t白色对象被引用后还未标记，可能在下一轮被回收的问题")]),t._v(" "),_("p",[t._v("​\t强制让被黑色引用的白色变灰色")]),t._v(" "),_("p",[_("strong",[t._v("懒清理")])]),t._v(" "),_("p",[t._v("如果内存足够执行代码，就延迟清理，也不需要全部清理，可以慢慢清")]),t._v(" "),_("p",[t._v("增量标记和懒清理减少了STW的时间，但是没有减少主线程的总暂停时间")]),t._v(" "),_("p",[_("strong",[t._v("并发回收")])]),t._v(" "),_("p",[t._v("用辅助线程GC，主线程不挂起")]),t._v(" "),_("p",[t._v("需要有额外的读写锁机制控制引用关系的变化")]),t._v(" "),_("p",[_("strong",[t._v("老生代主要使用并发标记、并发清理，同时用增量的方式分批执行")])]),t._v(" "),_("p",[_("strong",[t._v("9、内存泄漏")])]),t._v(" "),_("p",[t._v("无引用关系的对象没有被GC，则为内存泄漏")]),t._v(" "),_("p",[_("strong",[t._v("常见的内存泄漏")])]),t._v(" "),_("p",[t._v("1、不正当闭包：有对其他作用域变量的引用未清除，造成内存泄漏")]),t._v(" "),_("p",[t._v("2、隐式全局变量：没有声明，默认挂载全局；在函数中使用this产生隐式全局变量")]),t._v(" "),_("p",[t._v("3、游离DOM引用：移除节点时释放缓存的引用。解决：将父节点和子节点的引用全都置空")]),t._v(" "),_("p",[t._v("4、定时器clearInterval、clearTimeout、clearAnimationFrame")]),t._v(" "),_("p",[t._v("5、事件监听器：解决：组件销毁时清除监听器")]),t._v(" "),_("p",[t._v("6、监听者模式：组件销毁时清除处理函数")]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    eventBus"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("doSomething"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeDestroy")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    eventBus"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("off")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("doSomething"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  methods"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("p",[t._v("7、Map、Set：强引用，需要主动清除引用")]),t._v(" "),_("p",[t._v("强引用：直接赋值为堆内存的地址")]),t._v(" "),_("p",[t._v("强引用的obj和Map、Set需要全部引用的清除")]),t._v(" "),_("p",[t._v("使用弱引用的WeakMap和WeakSet，清除引用即可GC")]),t._v(" "),_("p",[t._v("8、Console：生产环境全部清除")]),t._v(" "),_("p",[t._v("定位和修复")])])}),[],!1,null,null,null);v.default=n.exports}}]);