(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{416:function(t,a,s){"use strict";s.r(a);var e=s(45),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1-理念篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-理念篇"}},[t._v("#")]),t._v(" 1. 理念篇")]),t._v(" "),s("h2",{attrs:{id:"_1-1-react的设计理念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-react的设计理念"}},[t._v("#")]),t._v(" 1.1 React的设计理念")]),t._v(" "),s("p",[s("strong",[t._v("触发更新：调度")])]),t._v(" "),s("p",[s("strong",[t._v("筛选按需更新的组件：协调")]),t._v("（diff的官方名称，reconcile）")]),t._v(" "),s("p",[s("strong",[t._v("渲染页面：渲染")]),t._v("（DOM,Native）")]),t._v(" "),s("p",[t._v("CPU瓶颈：出现掉帧，解决方法：异步可中断的更新")]),t._v(" "),s("p",[t._v("IO瓶颈：人机交互效果")]),t._v(" "),s("h2",{attrs:{id:"_1-2-架构演进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-架构演进"}},[t._v("#")]),t._v(" 1.2 架构演进")]),t._v(" "),s("p",[t._v("异步可中断的更新：")]),t._v(" "),s("p",[t._v("新增调度阶段，设置任务的优先级，调度和协调过程发生在内存中，不会对视图产生影响。因此可以解决高优中断时的试图展示渲染到一半的页面的情况。")]),t._v(" "),s("h2",{attrs:{id:"_1-3-fiber架构的工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-fiber架构的工作原理"}},[t._v("#")]),t._v(" 1.3 Fiber架构的工作原理")]),t._v(" "),s("p",[t._v("代数效应：用于将副作用从函数中分离")]),t._v(" "),s("p",[t._v("比如异步网络请求的逻辑分离出去，不影响我们关注核心逻辑，关注点变得纯粹。")]),t._v(" "),s("p",[t._v("比如hooks，不关注内部实现逻辑")]),t._v(" "),s("p",[t._v("Fiber用代数效应的思想实现"),s("strong",[t._v("异步可恢复中断的更新")]),t._v("，代数效应中try handle示例")]),t._v(" "),s("p",[s("strong",[t._v("概念名词")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Fiber纤程（可理解为协程的体现，而且可以实现优先级）")])]),t._v(" "),s("li",[s("p",[t._v("Process进程")])]),t._v(" "),s("li",[s("p",[t._v("Thread纤程")])]),t._v(" "),s("li",[s("p",[t._v("Coroutine协程（Generator，传染性 ）")])])]),t._v(" "),s("p",[t._v("根节点：FiberRootNode")]),t._v(" "),s("p",[t._v("应用根节点：RootFiber")]),t._v(" "),s("p",[t._v("组件节点：FC 节点，Host节点(DOM对应的fiber节点)，文本Fiber节点")]),t._v(" "),s("p",[t._v("子节点用return的指针指向父节点，体现的是递归思想")]),t._v(" "),s("p",[t._v("RootFiber使用stateNode指针指向FiberRootNode")]),t._v(" "),s("p",[t._v("![image-20211020192154145](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211020192154145.png)")]),t._v(" "),s("p",[t._v("动态工作单元：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FiberNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WorkTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  pendingProps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TypeOfMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作为静态数据结构的属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件类型，比如FC")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elementType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 大部分情况与type相同，除了FC被memo包裹这种情况")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Function， Class，DOM的typeName，")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于HC，真实的DOM")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于连接其他Fiber节点形成Fiber树")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("return "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sibling "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作为动态的工作单元的属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pendingProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dependencies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// effects")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("effectTag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoEffect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextEffect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastEffect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调度优先级相关")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向该fiber在另一次更新时对应的fiber")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alternate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("双缓存：")]),t._v(" "),s("p",[t._v("![image-20211020202215218](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211020202215218.png)")]),t._v(" "),s("p",[t._v("左侧是视图展示的Fiber树，右侧是触发更新在内存构建的Fiber树")]),t._v(" "),s("p",[t._v("完成渲染后FiberRootNode的current指针指向workInProgress树")]),t._v(" "),s("h2",{attrs:{id:"_1-4-文件目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-文件目录"}},[t._v("#")]),t._v(" 1.4 文件目录")]),t._v(" "),s("h1",{attrs:{id:"_2-架构篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-架构篇"}},[t._v("#")]),t._v(" 2. 架构篇")]),t._v(" "),s("p",[t._v("协调器Reconciler执行的阶段称为render，入口renderRootSync")]),t._v(" "),s("p",[t._v("​\t构建workInprogress树的过程分为递归阶段，beginWork开始递，completeWork开始归")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("渲染器Renderer执行的阶段称为commit，入口commitRoot")]),t._v(" "),s("p",[t._v("​\t渲染前commitBeforeMutationEffects（mutation突变，对浏览器而言指dom操作）")]),t._v(" "),s("p",[t._v("​\t渲染中commitMutationEffects（dom操作的时机）")]),t._v(" "),s("p",[t._v("​\t渲染后")]),t._v(" "),s("h2",{attrs:{id:"render"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" render")]),t._v(" "),s("p",[t._v("创建完rootFiber之后就会开始首屏渲染")]),t._v(" "),s("p",[t._v("使用遍历实现可中断的递归")]),t._v(" "),s("p",[t._v("​\tReactChildFiber.new和old：new是为了添加新功能测试所用")]),t._v(" "),s("p",[t._v("![image-20211027233918219](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211027233918219.png)")]),t._v(" "),s("p",[t._v("二进制掩码的形式表示标记值，可以方便地记录节点的变化")]),t._v(" "),s("p",[t._v("mount时不存在currentFiber树")]),t._v(" "),s("h3",{attrs:{id:"递阶段的mount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递阶段的mount"}},[t._v("#")]),t._v(" 递阶段的mount")]),t._v(" "),s("p",[t._v("beginWork(current, workInprogress, renderLanes)")]),t._v(" "),s("p",[t._v("首屏应用渲染， 只有根节点存在current，其他节点只有workInprogress")]),t._v(" "),s("p",[t._v("目的：创建当前fiber节点的第一个子节点，每次调用都只创建一个节点")]),t._v(" "),s("p",[t._v("过程：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("判断类型workInProgress.tag ，进入update逻辑的case；")])]),t._v(" "),s("li",[s("p",[t._v("updateXXXComponent中会做一些优化，然后调用reconcileChildren，再调用mountChildFibers创建子fiber节点")])]),t._v(" "),s("li",[s("p",[t._v("mountChildFibers和reconcileChildFibers的区别：")]),t._v(" "),s("p",[t._v("![image-20211029201833927](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029201833927.png)")]),t._v(" "),s("ul",[s("li",[t._v("shouldTrackSideEfftects，如果需要追踪，则给childFiber添加标记；否则直接return")]),t._v(" "),s("li",[t._v("通过current === null判断进入mountChildFibers还是reconcileChildFibers")])])]),t._v(" "),s("li",[s("p",[t._v("根据workInProgress fiber是否存在对应的current fiber来决定是否标记effectTag")])]),t._v(" "),s("li",[s("p",[t._v("然后进入reconcile的逻辑，判断当前fiber的children的类型，来创建子fiber节点")])])]),t._v(" "),s("p",[t._v("render阶段不会执行具体的dom操作，只为需要dom操作的fiber节点打上标记")]),t._v(" "),s("h3",{attrs:{id:"归阶段的mount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#归阶段的mount"}},[t._v("#")]),t._v(" 归阶段的mount")]),t._v(" "),s("p",[t._v("completeWork(current, workInprogress， renderLanes)")]),t._v(" "),s("p",[t._v("![image-20211029211838502](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029211838502.png)")]),t._v(" "),s("p",[t._v("根据fiber的type进入不同的case")]),t._v(" "),s("p",[t._v("![image-20211029211925654](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029211925654.png)")]),t._v(" "),s("p",[t._v("case中调用createInstance，为fiber节点创建dom节点（createInstance中调用createElement）")]),t._v(" "),s("p",[t._v("![image-20211029212001161](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029212001161.png)")]),t._v(" "),s("p",[t._v("![image-20211029212040962](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029212040962.png)")]),t._v(" "),s("p",[t._v("然后调用appendAllChildren插入dom树")]),t._v(" "),s("p",[t._v("由于img是第一次操作，会被跳过")]),t._v(" "),s("p",[t._v("dom节点保存在fiber节点的stateNode")]),t._v(" "),s("p",[t._v("![image-20211029212231761](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029212231761.png)")]),t._v(" "),s("p",[t._v("finalizeInitialChildren设置dom节点的属性")]),t._v(" "),s("p",[t._v("![image-20211029212259651](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029212259651.png)")]),t._v(" "),s("p",[t._v("根据HostComponent的类型进入不同逻辑")]),t._v(" "),s("p",[t._v("![image-20211029212408281](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029212408281.png)")]),t._v(" "),s("p",[t._v("判断props是否合法，然后初始化dom属性")]),t._v(" "),s("p",[t._v("![image-20211029212513092](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029212513092.png)")]),t._v(" "),s("p",[t._v("![image-20211029220012554](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029220012554.png)")]),t._v(" "),s("p",[t._v("![image-20211029220146573](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029220146573.png)")]),t._v(" "),s("p",[t._v("reconcileChildren创建的dom节点如何挂载在dom树上，根节点的current非空，调用了reconcileChildFibers")]),t._v(" "),s("p",[t._v("内部调用placeSingleChild( reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));")]),t._v(" "),s("p",[t._v("![image-20211029221833502](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029221833502.png)")]),t._v(" "),s("p",[t._v("completeWork执行完之后，执行")]),t._v(" "),s("p",[t._v("performSyncWorkOnRoot的其他逻辑")]),t._v(" "),s("p",[t._v("![image-20211029221033200](/Users/hendry5479/Library/Application Support/typora-user-images/image-20211029221033200.png)")]),t._v(" "),s("h3",{attrs:{id:"jsx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[t._v("#")]),t._v(" jsx")]),t._v(" "),s("p",[t._v("jsx最终被解释成React.createElement")]),t._v(" "),s("p",[t._v("workInProgress根据jsx对象构建fiber节点")]),t._v(" "),s("p",[t._v("jsx")]),t._v(" "),s("p",[t._v("对于浏览器而言，渲染器就是react-dom")]),t._v(" "),s("h3",{attrs:{id:"递和归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递和归"}},[t._v("#")]),t._v(" 递和归")]),t._v(" "),s("h2",{attrs:{id:"commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" commit")]),t._v(" "),s("h3",{attrs:{id:"before-mutation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#before-mutation"}},[t._v("#")]),t._v(" Before mutation")]),t._v(" "),s("h3",{attrs:{id:"mutation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutation"}},[t._v("#")]),t._v(" mutation")]),t._v(" "),s("h3",{attrs:{id:"layout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#layout"}},[t._v("#")]),t._v(" layout")]),t._v(" "),s("h1",{attrs:{id:"_3-实现篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现篇"}},[t._v("#")]),t._v(" 3.实现篇")]),t._v(" "),s("h2",{attrs:{id:"diff算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[t._v("#")]),t._v(" Diff算法")]),t._v(" "),s("h3",{attrs:{id:"diff算法的局限和解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff算法的局限和解决方案"}},[t._v("#")]),t._v(" diff算法的局限和解决方案")]),t._v(" "),s("h3",{attrs:{id:"单一节点diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单一节点diff"}},[t._v("#")]),t._v(" 单一节点diff")]),t._v(" "),s("h3",{attrs:{id:"多节点diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多节点diff"}},[t._v("#")]),t._v(" 多节点diff")]),t._v(" "),s("h2",{attrs:{id:"状态更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态更新"}},[t._v("#")]),t._v(" 状态更新")]),t._v(" "),s("h3",{attrs:{id:"update和updatequeue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update和updatequeue"}},[t._v("#")]),t._v(" Update和updateQueue")]),t._v(" "),s("h3",{attrs:{id:"update的优先级机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update的优先级机制"}},[t._v("#")]),t._v(" Update的优先级机制")]),t._v(" "),s("h3",{attrs:{id:"reactdom-render的执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactdom-render的执行流程"}},[t._v("#")]),t._v(" ReactDom.render的执行流程")]),t._v(" "),s("h3",{attrs:{id:"this-setstate的执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-setstate的执行流程"}},[t._v("#")]),t._v(" this.setState的执行流程")]),t._v(" "),s("h2",{attrs:{id:"生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),s("h3",{attrs:{id:"unsafe-componentwillxxx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unsafe-componentwillxxx"}},[t._v("#")]),t._v(" UNSAFE_componentWillXXX")]),t._v(" "),s("h3",{attrs:{id:"componentdidxxx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#componentdidxxx"}},[t._v("#")]),t._v(" componentDidXXX")]),t._v(" "),s("h3",{attrs:{id:"shouldcomponentupdate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate"}},[t._v("#")]),t._v(" shouldComponentUpdate")]),t._v(" "),s("h2",{attrs:{id:"hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),s("h3",{attrs:{id:"usestate实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usestate实现"}},[t._v("#")]),t._v(" useState实现")]),t._v(" "),s("h3",{attrs:{id:"usestate与usereducer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usestate与usereducer"}},[t._v("#")]),t._v(" useState与useReducer")]),t._v(" "),s("h3",{attrs:{id:"useeffects与uselayouteffect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useeffects与uselayouteffect"}},[t._v("#")]),t._v(" useEffects与useLayoutEffect")]),t._v(" "),s("h3",{attrs:{id:"usememo与usecallback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usememo与usecallback"}},[t._v("#")]),t._v(" useMemo与useCallback")]),t._v(" "),s("h3",{attrs:{id:"useref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useref"}},[t._v("#")]),t._v(" useRef")]),t._v(" "),s("h2",{attrs:{id:"异步调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步调度"}},[t._v("#")]),t._v(" 异步调度")]),t._v(" "),s("h3",{attrs:{id:"scheduler的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheduler的实现"}},[t._v("#")]),t._v(" Scheduler的实现")]),t._v(" "),s("h3",{attrs:{id:"lane模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lane模型"}},[t._v("#")]),t._v(" lane模型")]),t._v(" "),s("h3",{attrs:{id:"更新的中断-继续-重置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新的中断-继续-重置"}},[t._v("#")]),t._v(" 更新的中断/继续/重置")]),t._v(" "),s("h3",{attrs:{id:"usetransition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usetransition"}},[t._v("#")]),t._v(" useTransition")])])}),[],!1,null,null,null);a.default=r.exports}}]);