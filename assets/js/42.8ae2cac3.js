(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{385:function(t,s,e){"use strict";e.r(s);var a=e(45),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"reconcile-render阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reconcile-render阶段"}},[t._v("#")]),t._v(" Reconcile（render阶段）")]),t._v(" "),e("p",[t._v("一句话概括："),e("code",[t._v("Fiber节点")]),t._v("创建和构建"),e("code",[t._v("Fiber树")]),t._v("的过程")]),t._v(" "),e("p",[t._v("ChildFibers：注解")]),t._v(" "),e("p",[t._v("shouldTrackSideEffects")]),t._v(" "),e("p",[t._v("ReactSideEffectsTags")]),t._v(" "),e("p",[e("strong",[e("code",[t._v("render")]),t._v("开始于"),e("code",[t._v("performSyncWorkOnRoot")]),t._v("或"),e("code",[t._v("performConcurrentWorkOnRoot")]),t._v("，取决于更新是同步还是异步")])]),t._v(" "),e("p",[t._v("方法执行差异在于"),e("strong",[t._v("是否调用"),e("code",[t._v("shouldYield")])])]),t._v(" "),e("p",[t._v("如果浏览器帧没有剩余时间，"),e("code",[t._v("shouldYield")]),t._v("会中止循环，直到浏览器空闲再继续遍历")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performSyncWorkOnRoot会调用该方法")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performConcurrentWorkOnRoot会调用该方法")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopConcurrent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldYield")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("workInProgress")]),t._v("代表已创建的"),e("code",[t._v("workInProgress fiber")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("performUnitOfWork")]),t._v("会创建新"),e("code",[t._v("Fiber节点")]),t._v("并赋值给"),e("code",[t._v("workInProgress")]),t._v("，并将"),e("code",[t._v("workInProgress")]),t._v("与已创建的"),e("code",[t._v("Fiber节点")]),t._v("连接构成"),e("code",[t._v("Fiber树")]),t._v("。")]),t._v(" "),e("p",[t._v("我们知道"),e("code",[t._v("Fiber Reconciler")]),t._v("是从"),e("code",[t._v("Stack Reconciler")]),t._v("重构而来，通过遍历的方式实现可中断的递归。")]),t._v(" "),e("p",[t._v("所以"),e("code",[t._v("performUnitOfWork")]),t._v("的工作可以分为两部分：“递”和“归”。")]),t._v(" "),e("h2",{attrs:{id:"递-阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递-阶段"}},[t._v("#")]),t._v(" “递”阶段")]),t._v(" "),e("p",[t._v("从"),e("code",[t._v("rootFiber")]),t._v("开始向下深度优先遍历。为每个"),e("code",[t._v("Fiber节点")]),t._v("调用beginWork，为传入的"),e("code",[t._v("Fiber节点")]),t._v("创建"),e("code",[t._v("子Fiber节点")])]),t._v(" "),e("p",[t._v("当遍历到叶子节点时进入“归”阶段")]),t._v(" "),e("h2",{attrs:{id:"归-阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#归-阶段"}},[t._v("#")]),t._v(" “归”阶段")]),t._v(" "),e("p",[t._v("调用completeWork处理"),e("code",[t._v("Fiber节点")])]),t._v(" "),e("p",[t._v("当某个"),e("code",[t._v("Fiber节点")]),t._v("执行完"),e("code",[t._v("completeWork")]),t._v("，如果存在"),e("code",[t._v("兄弟Fiber节点")]),t._v("（即"),e("code",[t._v("fiber.sibling !== null")]),t._v("），进入兄弟"),e("code",[t._v("Fiber")]),t._v("的“递”阶段")]),t._v(" "),e("p",[t._v("如果不存在"),e("code",[t._v("兄弟Fiber")]),t._v("，会进入"),e("code",[t._v("父级Fiber")]),t._v("的“归”阶段。")]),t._v(" "),e("p",[t._v("“递”和“归”阶段会交错执行直到“归”到"),e("code",[t._v("rootFiber")]),t._v("。至此，"),e("code",[t._v("render阶段")]),t._v("的工作就结束了。")]),t._v(" "),e("h3",{attrs:{id:"beginwork"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beginwork"}},[t._v("#")]),t._v(" beginWork")]),t._v(" "),e("p",[e("code",[t._v("beginWork")]),t._v("的工作是传入"),e("code",[t._v("当前Fiber节点")]),t._v("，创建"),e("code",[t._v("子Fiber节点")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginWork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略函数体")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("current：当前"),e("code",[t._v("Fiber节点")]),t._v("在上一次更新时的"),e("code",[t._v("Fiber节点")]),t._v("，即"),e("code",[t._v("workInProgress.alternate")])]),t._v(" "),e("li",[t._v("workInProgress：当前的"),e("code",[t._v("Fiber节点")])]),t._v(" "),e("li",[t._v("renderLanes：优先级相关")])]),t._v(" "),e("p",[t._v("通过"),e("code",[t._v("current === null")]),t._v("区分"),e("code",[t._v("mount")]),t._v("和"),e("code",[t._v("update")])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("update")]),t._v("：如果"),e("code",[t._v("current")]),t._v("存在，尽可能复用"),e("code",[t._v("current")]),t._v("节点，克隆"),e("code",[t._v("current.child")]),t._v("作为"),e("code",[t._v("workInProgress.child")]),t._v("，不需要新建")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("mount")]),t._v("：除"),e("code",[t._v("fiberRoot")]),t._v("以外，"),e("code",[t._v("current === null")]),t._v("。会根据"),e("code",[t._v("fiber.tag")]),t._v("创建子Fiber节点")])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginWork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update时：可以复用current（即上一次更新的Fiber节点）")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复用current")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bailoutOnAlreadyFinishedWork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      renderLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    didReceiveUpdate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mount时：根据tag不同，创建不同的子Fiber节点")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" FunctionComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ClassComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"update时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update时"}},[t._v("#")]),t._v(" update时")]),t._v(" "),e("p",[t._v("满足props和type不变，且优先级不足时可复用Fiber")]),t._v(" "),e("p",[e("code",[t._v("didReceiveUpdate === false")]),t._v("（是否真的收到更新信号）")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("oldProps === newProps && workInProgress.type === current.type")]),t._v("，"),e("strong",[t._v("即"),e("code",[t._v("props")]),t._v("与"),e("code",[t._v("fiber.type")]),t._v("不变")])]),t._v(" "),e("li",[e("code",[t._v("!includesSomeLane(renderLanes, updateLanes)")]),t._v("，即当前"),e("code",[t._v("Fiber节点")]),t._v("优先级不够，会在讲解"),e("code",[t._v("Scheduler")]),t._v("时介绍")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记忆的Props")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 待更新的Props")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      oldProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" newProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasLegacyContextChanged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__DEV__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      didReceiveUpdate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("includesSomeLane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updateLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      didReceiveUpdate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略处理")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bailoutOnAlreadyFinishedWork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        renderLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      didReceiveUpdate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    didReceiveUpdate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"mount时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mount时"}},[t._v("#")]),t._v(" mount时")]),t._v(" "),e("p",[t._v("当不满足优化路径时，新建"),e("code",[t._v("子Fiber")]),t._v("。根据"),e("code",[t._v("fiber.tag")]),t._v("不同，进入不同的创建逻辑。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mount时：根据tag不同，创建不同的Fiber节点")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" IndeterminateComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" LazyComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" FunctionComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ClassComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostRoot"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostText"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略其他类型")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("对于常见的组件类型，如（"),e("code",[t._v("FunctionComponent")]),t._v("/"),e("code",[t._v("ClassComponent")]),t._v("/"),e("code",[t._v("HostComponent")]),t._v("），最终会进入"),e("strong",[t._v("reconcileChildren")])]),t._v(" "),e("h2",{attrs:{id:"reconcilechildren"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reconcilechildren"}},[t._v("#")]),t._v(" reconcileChildren")]),t._v(" "),e("p",[t._v("从该函数名就能看出这是"),e("code",[t._v("Reconciler")]),t._v("模块的核心部分。那么他究竟做了什么呢？")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("对于"),e("code",[t._v("mount")]),t._v("的组件，他会创建新"),e("code",[t._v("子Fiber节点")])])]),t._v(" "),e("li",[e("p",[t._v("对于"),e("code",[t._v("update")]),t._v("的组件，他会将当前组件与该组件在上次更新时对应的"),e("code",[t._v("Fiber节点")]),t._v("比较（也就是俗称的"),e("code",[t._v("Diff")]),t._v("算法），将比较的结果生成新"),e("code",[t._v("Fiber节点")])])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildren")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nextChildren"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于mount的组件")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mountChildFibers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      nextChildren"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      renderLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于update的组件")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildFibers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      nextChildren"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      renderLanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("和"),e("code",[t._v("beginWork")]),t._v("一样，通过"),e("code",[t._v("current === null ?")]),t._v("区分"),e("code",[t._v("mount")]),t._v("与"),e("code",[t._v("update")]),t._v("。")]),t._v(" "),e("p",[t._v("reconcileChildren最终会生成新的子"),e("code",[t._v("Fiber节点")]),t._v("并赋值给"),e("code",[t._v("workInProgress.child")]),t._v("，作为本次"),e("code",[t._v("beginWork")]),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberBeginWork.new.js#L1158",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回值"),e("OutboundLink")],1),t._v("，并作为下次"),e("code",[t._v("performUnitOfWork")]),t._v("执行时"),e("code",[t._v("workInProgress")]),t._v("的"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L1702",target:"_blank",rel:"noopener noreferrer"}},[t._v("传参"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("mountChildFibers")]),t._v("与"),e("code",[t._v("reconcileChildFibers")]),t._v("的区别是："),e("code",[t._v("reconcileChildFibers")]),t._v("会为生成的"),e("code",[t._v("Fiber节点")]),t._v("带上"),e("code",[t._v("effectTag")]),t._v("属性，而"),e("code",[t._v("mountChildFibers")]),t._v("不会")]),t._v(" "),e("h2",{attrs:{id:"effecttag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#effecttag"}},[t._v("#")]),t._v(" effectTag")]),t._v(" "),e("p",[t._v("我们知道，"),e("code",[t._v("render阶段")]),t._v("的工作是在内存中进行，当工作结束后会通知"),e("code",[t._v("Renderer")]),t._v("需要执行的"),e("code",[t._v("DOM")]),t._v("操作。"),e("strong",[t._v("要执行"),e("code",[t._v("DOM")]),t._v("操作的具体类型就保存在"),e("code",[t._v("fiber.effectTag")]),t._v("中。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM需要插入到页面中")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Placement "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*                */")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b00000000000010")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM需要更新")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Update "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*                   */")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b00000000000100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM需要插入到页面中并更新")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" PlacementAndUpdate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*       */")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b00000000000110")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM需要删除")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Deletion "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*                 */")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b00000000001000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("二进制表示"),e("code",[t._v("effectTag")]),t._v("方便使用位操作为"),e("code",[t._v("effectTag")]),t._v("赋值多个"),e("code",[t._v("effect")]),t._v("。")])]),t._v(" "),e("p",[t._v("如果要通知"),e("code",[t._v("Renderer")]),t._v("将"),e("code",[t._v("Fiber节点")]),t._v("对应的"),e("code",[t._v("DOM节点")]),t._v("插入页面中，需要满足两个条件：")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("fiber.stateNode")]),t._v("存在，即"),e("code",[t._v("Fiber节点")]),t._v("中保存了对应的"),e("code",[t._v("DOM节点")])]),t._v(" "),e("li",[e("code",[t._v("(fiber.effectTag & Placement) !== 0")]),t._v("，即"),e("code",[t._v("Fiber节点")]),t._v("存在"),e("code",[t._v("Placement effectTag")])])]),t._v(" "),e("p",[t._v("我们知道，"),e("code",[t._v("mount")]),t._v("时，"),e("code",[t._v("fiber.stateNode === null")]),t._v("，且在"),e("code",[t._v("reconcileChildren")]),t._v("中调用的"),e("code",[t._v("mountChildFibers")]),t._v("不会为"),e("code",[t._v("Fiber节点")]),t._v("赋值"),e("code",[t._v("effectTag")]),t._v("。那么"),e("strong",[t._v("首屏渲染如何完成呢？")])]),t._v(" "),e("p",[t._v("针对第一个问题，"),e("strong",[e("code",[t._v("fiber.stateNode")]),t._v("会在"),e("code",[t._v("completeWork")]),t._v("中创建")]),t._v("，我们会在下一节介绍。")]),t._v(" "),e("p",[t._v("第二个问题的答案十分巧妙：假设"),e("code",[t._v("mountChildFibers")]),t._v("也会赋值"),e("code",[t._v("effectTag")]),t._v("，那么可以预见"),e("code",[t._v("mount")]),t._v("时整棵"),e("code",[t._v("Fiber树")]),t._v("所有节点都会有"),e("code",[t._v("Placement effectTag")]),t._v("。那么"),e("code",[t._v("commit阶段")]),t._v("在执行"),e("code",[t._v("DOM")]),t._v("操作时每个节点都会执行一次插入操作，这样大量的"),e("code",[t._v("DOM")]),t._v("操作是极低效的。")]),t._v(" "),e("p",[t._v("为了解决这个问题，在"),e("code",[t._v("mount")]),t._v("时只有"),e("code",[t._v("rootFiber")]),t._v("会赋值"),e("code",[t._v("Placement effectTag")]),t._v("，在"),e("code",[t._v("commit阶段")]),t._v("只会执行一次插入操作。")]),t._v(" "),e("p",[t._v("根Fiber节点 Demo\n借用上一节的Demo，第一个进入"),e("code",[t._v("beginWork")]),t._v("方法的"),e("code",[t._v("Fiber节点")]),t._v("就是"),e("code",[t._v("rootFiber")]),t._v("，他的"),e("code",[t._v("alternate")]),t._v("指向"),e("code",[t._v("current rootFiber")]),t._v("（即他存在"),e("code",[t._v("current")]),t._v("）。")]),t._v(" "),e("blockquote",[e("p",[t._v("为什么"),e("code",[t._v("rootFiber")]),t._v("节点存在"),e("code",[t._v("current")]),t._v("（即"),e("code",[t._v("rootFiber.alternate")]),t._v("），我们在"),e("RouterLink",{attrs:{to:"/react/react源码/doubleBuffer.html"}},[t._v("双缓存机制一节mount时的第二步")]),t._v("已经讲过")],1)]),t._v(" "),e("p",[t._v("由于存在"),e("code",[t._v("current")]),t._v("，"),e("code",[t._v("rootFiber")]),t._v("在"),e("code",[t._v("reconcileChildren")]),t._v("时会走"),e("code",[t._v("reconcileChildFibers")]),t._v("逻辑。")]),t._v(" "),e("p",[t._v("而之后通过"),e("code",[t._v("beginWork")]),t._v("创建的"),e("code",[t._v("Fiber节点")]),t._v("是不存在"),e("code",[t._v("current")]),t._v("的（即 "),e("code",[t._v("fiber.alternate === null")]),t._v("），会走"),e("code",[t._v("mountChildFibers")]),t._v("逻辑。")]),t._v(" "),e("h3",{attrs:{id:"completework"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#completework"}},[t._v("#")]),t._v(" completeWork")]),t._v(" "),e("h2",{attrs:{id:"流程概览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程概览"}},[t._v("#")]),t._v(" 流程概览")]),t._v(" "),e("p",[t._v("类似"),e("code",[t._v("beginWork")]),t._v("，"),e("code",[t._v("completeWork")]),t._v("也是针对不同"),e("code",[t._v("fiber.tag")]),t._v("调用不同的处理逻辑。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("completeWork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderLanes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lanes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pendingProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" IndeterminateComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" LazyComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" SimpleMemoComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" FunctionComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ForwardRef"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Fragment"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Mode"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Profiler"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ContextConsumer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" MemoComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ClassComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostRoot"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostContainer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n")])])]),e("p",[t._v("我们重点关注页面渲染所必须的"),e("code",[t._v("HostComponent")]),t._v("（即原生"),e("code",[t._v("DOM组件")]),t._v("对应的"),e("code",[t._v("Fiber节点")]),t._v("），其他类型"),e("code",[t._v("Fiber")]),t._v("的处理留在具体功能实现时讲解。")]),t._v(" "),e("h2",{attrs:{id:"处理hostcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理hostcomponent"}},[t._v("#")]),t._v(" 处理HostComponent")]),t._v(" "),e("p",[t._v("和"),e("code",[t._v("beginWork")]),t._v("一样，我们根据"),e("code",[t._v("current === null ?")]),t._v("判断是"),e("code",[t._v("mount")]),t._v("还是"),e("code",[t._v("update")]),t._v("。")]),t._v(" "),e("p",[t._v("同时针对"),e("code",[t._v("HostComponent")]),t._v("，判断"),e("code",[t._v("update")]),t._v("时我们还需要考虑"),e("code",[t._v("workInProgress.stateNode != null ?")]),t._v("（即该"),e("code",[t._v("Fiber节点")]),t._v("是否存在对应的"),e("code",[t._v("DOM节点")]),t._v("）")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" HostComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("popHostContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rootContainerInstance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRootHostContainer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update的情况")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mount的情况")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"update时-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update时-2"}},[t._v("#")]),t._v(" update时")]),t._v(" "),e("p",[t._v("当"),e("code",[t._v("update")]),t._v("时，"),e("code",[t._v("Fiber节点")]),t._v("已经存在对应"),e("code",[t._v("DOM节点")]),t._v("，所以不需要生成"),e("code",[t._v("DOM节点")]),t._v("。需要做的主要是处理"),e("code",[t._v("props")]),t._v("，比如：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("onClick")]),t._v("、"),e("code",[t._v("onChange")]),t._v("等回调函数的注册")]),t._v(" "),e("li",[t._v("处理"),e("code",[t._v("style prop")])]),t._v(" "),e("li",[t._v("处理"),e("code",[t._v("DANGEROUSLY_SET_INNER_HTML prop")])]),t._v(" "),e("li",[t._v("处理"),e("code",[t._v("children prop")])])]),t._v(" "),e("p",[t._v("我们去掉一些当前不需要关注的功能（比如"),e("code",[t._v("ref")]),t._v("）。可以看到最主要的逻辑是调用"),e("code",[t._v("updateHostComponent")]),t._v("方法。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update的情况")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateHostComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rootContainerInstance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("你可以从"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberCompleteWork.new.js#L225",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("看到"),e("code",[t._v("updateHostComponent")]),t._v("方法定义。")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("updateHostComponent")]),t._v("内部，被处理完的"),e("code",[t._v("props")]),t._v("会被赋值给"),e("code",[t._v("workInProgress.updateQueue")]),t._v("，并最终会在"),e("code",[t._v("commit阶段")]),t._v("被渲染在页面上。")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateQueue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updatePayload"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("其中"),e("code",[t._v("updatePayload")]),t._v("为数组形式，他的偶数索引的值为变化的"),e("code",[t._v("prop key")]),t._v("，奇数索引的值为变化的"),e("code",[t._v("prop value")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("具体渲染过程见"),e("RouterLink",{attrs:{to:"/react/renderer/mutation.html#hostcomponent-mutation"}},[t._v("mutation阶段一节")])],1)]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("updatePayload属性 Demo")]),t._v(" "),e("p",[e("code",[t._v("updateHostComponent")]),t._v("方法内打印了"),e("code",[t._v("Fiber节点")]),t._v("对应的"),e("code",[t._v("type")]),t._v("与"),e("code",[t._v("updatePayload")]),t._v("。")]),t._v(" "),e("p",[t._v("你可以直观的感受"),e("code",[t._v("updatePayload")]),t._v("的数据结构")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/react/me.html"}},[t._v("关注公众号")]),t._v("，后台回复"),e("strong",[t._v("431")]),t._v("获得在线Demo地址")],1)]),t._v(" "),e("h2",{attrs:{id:"mount时-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mount时-2"}},[t._v("#")]),t._v(" mount时")]),t._v(" "),e("p",[t._v("同样，我们省略了不相关的逻辑。可以看到，"),e("code",[t._v("mount")]),t._v("时的主要逻辑包括三个：")]),t._v(" "),e("ul",[e("li",[t._v("为"),e("code",[t._v("Fiber节点")]),t._v("生成对应的"),e("code",[t._v("DOM节点")])]),t._v(" "),e("li",[t._v("将子孙"),e("code",[t._v("DOM节点")]),t._v("插入刚生成的"),e("code",[t._v("DOM节点")]),t._v("中")]),t._v(" "),e("li",[t._v("与"),e("code",[t._v("update")]),t._v("逻辑中的"),e("code",[t._v("updateHostComponent")]),t._v("类似的处理"),e("code",[t._v("props")]),t._v("的过程")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mount的情况")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略服务端渲染相关逻辑")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentHostContext "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHostContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为fiber创建对应DOM节点")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createInstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rootContainerInstance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    currentHostContext"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将子孙DOM节点插入刚生成的DOM节点中")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendAllChildren")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM节点赋值给fiber.stateNode")]),t._v("\nworkInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与update逻辑中的updateHostComponent类似的处理props的过程")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("finalizeInitialChildren")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    newProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rootContainerInstance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    currentHostContext"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("markUpdate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("还记得"),e("RouterLink",{attrs:{to:"/react/react源码/beginWork.html#effecttag"}},[t._v("上一节")]),t._v("我们讲到："),e("code",[t._v("mount")]),t._v("时只会在"),e("code",[t._v("rootFiber")]),t._v("存在"),e("code",[t._v("Placement effectTag")]),t._v("。那么"),e("code",[t._v("commit阶段")]),t._v("是如何通过一次插入"),e("code",[t._v("DOM")]),t._v("操作（对应一个"),e("code",[t._v("Placement effectTag")]),t._v("）将整棵"),e("code",[t._v("DOM树")]),t._v("插入页面的呢？")],1),t._v(" "),e("p",[t._v("原因就在于"),e("code",[t._v("completeWork")]),t._v("中的"),e("code",[t._v("appendAllChildren")]),t._v("方法。")]),t._v(" "),e("p",[t._v("由于"),e("code",[t._v("completeWork")]),t._v("属于“归”阶段调用的函数，每次调用"),e("code",[t._v("appendAllChildren")]),t._v("时都会将已生成的子孙"),e("code",[t._v("DOM节点")]),t._v("插入当前生成的"),e("code",[t._v("DOM节点")]),t._v("下。那么当“归”到"),e("code",[t._v("rootFiber")]),t._v("时，我们已经有一个构建好的离屏"),e("code",[t._v("DOM树")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"effectlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#effectlist"}},[t._v("#")]),t._v(" effectList")]),t._v(" "),e("p",[t._v("至此"),e("code",[t._v("render阶段")]),t._v("的绝大部分工作就完成了。")]),t._v(" "),e("p",[t._v("还有一个问题：作为"),e("code",[t._v("DOM")]),t._v("操作的依据，"),e("code",[t._v("commit阶段")]),t._v("需要找到所有有"),e("code",[t._v("effectTag")]),t._v("的"),e("code",[t._v("Fiber节点")]),t._v("并依次执行"),e("code",[t._v("effectTag")]),t._v("对应操作。难道需要在"),e("code",[t._v("commit阶段")]),t._v("再遍历一次"),e("code",[t._v("Fiber树")]),t._v("寻找"),e("code",[t._v("effectTag !== null")]),t._v("的"),e("code",[t._v("Fiber节点")]),t._v("么？")]),t._v(" "),e("p",[t._v("这显然是很低效的。")]),t._v(" "),e("p",[t._v("为了解决这个问题，在"),e("code",[t._v("completeWork")]),t._v("的上层函数"),e("code",[t._v("completeUnitOfWork")]),t._v("中，每个执行完"),e("code",[t._v("completeWork")]),t._v("且存在"),e("code",[t._v("effectTag")]),t._v("的"),e("code",[t._v("Fiber节点")]),t._v("会被保存在一条被称为"),e("code",[t._v("effectList")]),t._v("的单向链表中。")]),t._v(" "),e("p",[e("code",[t._v("effectList")]),t._v("中第一个"),e("code",[t._v("Fiber节点")]),t._v("保存在"),e("code",[t._v("fiber.firstEffect")]),t._v("，最后一个元素保存在"),e("code",[t._v("fiber.lastEffect")]),t._v("。")]),t._v(" "),e("p",[t._v("类似"),e("code",[t._v("appendAllChildren")]),t._v("，在“归”阶段，所有有"),e("code",[t._v("effectTag")]),t._v("的"),e("code",[t._v("Fiber节点")]),t._v("都会被追加在"),e("code",[t._v("effectList")]),t._v("中，最终形成一条以"),e("code",[t._v("rootFiber.firstEffect")]),t._v("为起点的单向链表。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("                       nextEffect         nextEffect\nrootFiber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstEffect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" fiber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" fiber\n")])])]),e("p",[t._v("这样，在"),e("code",[t._v("commit阶段")]),t._v("只需要遍历"),e("code",[t._v("effectList")]),t._v("就能执行所有"),e("code",[t._v("effect")]),t._v("了。")]),t._v(" "),e("p",[t._v("借用"),e("code",[t._v("React")]),t._v("团队成员"),e("strong",[t._v("Dan Abramov")]),t._v("的话："),e("code",[t._v("effectList")]),t._v("相较于"),e("code",[t._v("Fiber树")]),t._v("，就像圣诞树上挂的那一串彩灯。")]),t._v(" "),e("h2",{attrs:{id:"流程结尾"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程结尾"}},[t._v("#")]),t._v(" 流程结尾")]),t._v(" "),e("p",[t._v("至此，"),e("code",[t._v("render阶段")]),t._v("全部工作完成。在"),e("code",[t._v("performSyncWorkOnRoot")]),t._v("函数中"),e("code",[t._v("fiberRootNode")]),t._v("被传递给"),e("code",[t._v("commitRoot")]),t._v("方法，开启"),e("code",[t._v("commit阶段")]),t._v("工作流程。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRoot")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);