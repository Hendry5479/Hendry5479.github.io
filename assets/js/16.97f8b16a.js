(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{399:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是模块"}},[t._v("#")]),t._v(" 什么是模块")]),t._v(" "),a("ul",[a("li",[t._v("内部实现，向外部暴露接口")])]),t._v(" "),a("p",[t._v("cjs：module.exports || exports.xxx = value; require( )")]),t._v(" "),a("p",[t._v("amd：define()")]),t._v(" "),a("h2",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" CommonJS")]),t._v(" "),a("p",[t._v("Node 应用由模块组成，采用 CommonJS 模块规范。每个文件就是一个模块，有自己的作用域。")]),t._v(" "),a("p",[t._v("在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见。")]),t._v(" "),a("p",[a("strong",[t._v("在服务器端，模块的加载是运行时同步加载的；在浏览器端，模块需要提前编译打包处理。")])]),t._v(" "),a("p",[t._v("CommonJS规范加载模块是"),a("strong",[t._v("同步")]),t._v("的，也就是说，只有加载完成，才能执行后面的操作。")]),t._v(" "),a("p",[t._v("基本语法：")]),t._v(" "),a("ul",[a("li",[t._v("暴露模块："),a("code",[t._v("module.exports = value")]),t._v(" 或 "),a("code",[t._v("exports.xxx = value")])]),t._v(" "),a("li",[t._v("引入模块："),a("code",[t._v("require(xxx)")]),t._v(",如果是第三方模块，xxx为模块名；如果是自定义模块，xxx为模块文件路径")])]),t._v(" "),a("p",[t._v("但是，CommonJs有一个重大的局限使得它"),a("strong",[t._v("不适用于浏览器环境")]),t._v("，那就是"),a("code",[t._v("require")]),t._v("操作是同步的。")]),t._v(" "),a("p",[t._v("因此，浏览器端的模块，不能采用”同步加载”（synchronous），只能采用”异步加载”（asynchronous），这就是AMD规范诞生的背景。")]),t._v(" "),a("h2",{attrs:{id:"amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd"}},[t._v("#")]),t._v(" AMD")]),t._v(" "),a("p",[t._v("异步加载模块，不影响后续语句的执行，依赖模块的语句定义在回调函数，"),a("strong",[t._v("浏览器端一般采用AMD规范")])]),t._v(" "),a("p",[t._v("代表作："),a("strong",[t._v("require.js")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义没有依赖的模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 模块\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义有依赖的模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 模块\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入使用模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用m1/m2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[t._v("#")]),t._v(" CMD")]),t._v(" "),a("p",[t._v("特点：异步加载，模块使用时才加载执行。")]),t._v(" "),a("p",[t._v("代表作："),a("strong",[t._v("Sea.js")])]),t._v(" "),a("p",[t._v("用法:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义没有依赖的模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n  module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义有依赖的模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入依赖模块(同步)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./module2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入依赖模块(异步)")]),t._v("\n  require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("async")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./module3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//暴露模块")]),t._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入使用模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./module1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./module4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  m1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  m4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n")])])]),a("h2",{attrs:{id:"cmd与amd区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd与amd区别"}},[t._v("#")]),t._v(" CMD与AMD区别")]),t._v(" "),a("p",[t._v("AMD在声明依赖时第一时间加载并执行模块")]),t._v(" "),a("p",[t._v("CMD推崇依赖就近，延迟执行")]),t._v(" "),a("p",[t._v("AMD和CMD最大的区别是"),a("strong",[t._v("对依赖模块的执行时机处理不同")]),t._v("，而"),a("strong",[t._v("不是加载的时机或者方式不同")]),t._v("，二者皆为"),a("strong",[t._v("异步加载")]),t._v("模块。")]),t._v(" "),a("p",[t._v("AMD依赖前置，js可以方便知道依赖模块是谁，立即加载；")]),t._v(" "),a("p",[t._v("而CMD就近依赖，需要使用把模块变为字符串解析一遍才知道依赖了那些模块，这也是很多人诟病CMD的一点，牺牲性能来带来开发的便利性，实际上解析模块用的时间短到可以忽略。")]),t._v(" "),a("p",[t._v("一句话总结： "),a("strong",[t._v("两者都是异步加载，只是执行时机不一样。AMD是依赖前置，提前执行，CMD是依赖就近，延迟执行。")])]),t._v(" "),a("h2",{attrs:{id:"es6模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6模块化"}},[t._v("#")]),t._v(" ES6模块化")]),t._v(" "),a("p",[t._v("ES6 模块的设计思想是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS 和 AMD 模块，都只能在运行时确定这些东西。比如，CommonJS 模块就是对象，输入时必须查找对象属性。")]),t._v(" "),a("p",[a("strong",[t._v("ES6 Module默认目前还没有被浏览器支持，需要使用babel，在日常写demo的时候经常会显示这个错误：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/5/5/16a860308ca03520~tplv-t2oaga2asx-watermark.awebp",alt:"图片描述"}})]),t._v(" "),a("p",[t._v("ES6模块使用"),a("code",[t._v("import")]),t._v("关键字导入模块，"),a("code",[t._v("export")]),t._v("关键字导出模块：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    /** 导出模块的方式 **/\n    \n    var a = 0;\n    export { a }; //第一种\n       \n    export const b = 1; //第二种 \n      \n    let c = 2;\n    export default { c }//第三种 \n    \n    let d = 2;\n    export default { d as e }//第四种，别名\n    \n    /** 导入模块的方式 **/\n    \n    import { a } from './a.js' //针对export导出方式，.js后缀可省略\n    \n    import main from './c' //针对export default导出方式,使用时用 main.c\n    \n    import 'lodash' //仅仅执行lodash模块，但是不输入任何值\n复制代码\n")])])]),a("h4",{attrs:{id:"命名式导出与默认导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名式导出与默认导出"}},[t._v("#")]),t._v(" 命名式导出与默认导出")]),t._v(" "),a("p",[a("code",[t._v("export {<变量>}")]),t._v("这种方式一般称为 "),a("strong",[t._v("命名式导出")]),t._v(" 或者 "),a("strong",[t._v("具名导出")]),t._v("，导出的是一个"),a("strong",[t._v("变量的引用")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("export default")]),t._v("这种方式称为 "),a("strong",[t._v("默认导出")]),t._v(" 或者 "),a("strong",[t._v("匿名导出")]),t._v("，导出的是一个"),a("strong",[t._v("值")]),t._v("。")]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // a.js\n    let x = 10\n    let y = 20\n    setTimeout(()=>{\n        x = 100\n        y = 200\n    },100)\n    export { x }\n    export default y\n\n    // b.js\n    import { x } from './a.js'\n    import y from './a.js'\n    setTimeout(()=>{\n        console.log(x,y) // 100,20\n    },100)\n复制代码\n")])])]),a("h2",{attrs:{id:"es6-模块与-commonjs-模块的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块与-commonjs-模块的差异"}},[t._v("#")]),t._v(" ES6 模块与 CommonJS 模块的差异")]),t._v(" "),a("p",[a("strong",[t._v("① CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。")])]),t._v(" "),a("p",[t._v("CommonJS 模块输出的是"),a("strong",[t._v("值的拷贝")]),t._v("，也就是说，一旦输出一个值，模块内部的变化就影响不到这个值。而且，CommonJS 模块无论加载多少次，都"),a("strong",[t._v("只会在第一次加载时运行一次")]),t._v("，以后再加载，返回的都是第一次运行结果的缓存，除非手动清除系统缓存。")]),t._v(" "),a("p",[t._v("￼ES6 模块的运行机制与 CommonJS 不一样，JS 引擎对脚本静态分析的时候，遇到模块加载命令"),a("code",[t._v("import")]),t._v("，就会生成一个"),a("strong",[t._v("只读引用")]),t._v("，等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值。换句话说，ES6 的"),a("code",[t._v("import")]),t._v("有点像 Unix 系统的“符号连接”，原始值变了，"),a("code",[t._v("import")]),t._v("加载的值也会跟着变。因此，ES6 模块是"),a("strong",[t._v("动态引用")]),t._v("，并且"),a("strong",[t._v("不会缓存值")]),t._v("，模块里面的变量绑定其所在的模块。")]),t._v(" "),a("p",[a("strong",[t._v("② CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。")])]),t._v(" "),a("p",[t._v("CommonJS 加载的是一个对象（即"),a("code",[t._v("module.exports")]),t._v("属性），该对象只有在脚本运行完才会生成。即在输入时是先加载整个模块，生成一个对象，然后再从这个对象上面读取方法，这种加载称为“"),a("strong",[t._v("运行时加载")]),t._v("”。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // CommonJS模块\n    let { stat, exists, readFile } = require('fs');\n    \n    // 等同于\n    let _fs = require('fs');\n    let stat = _fs.stat;\n    let exists = _fs.exists;\n    let readfile = _fs.readfile;\n复制代码\n")])])]),a("p",[t._v("上面代码的实质是整体加载fs模块（即加载fs的所有方法），生成一个对象（_fs），然后再从这个对象上面读取 3 个方法。因为只有运行时才能得到这个对象，导致完全没办法在编译时做“静态优化”。")]),t._v(" "),a("p",[t._v("ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。通过"),a("code",[t._v("export")]),t._v("命令显式指定输出的代码，"),a("code",[t._v("import")]),t._v("时采用静态命令的形式。即在"),a("code",[t._v("import")]),t._v("时可以指定加载某个输出值，而不是加载整个模块，这种加载称为“"),a("strong",[t._v("编译时加载")]),t._v("”或者“"),a("strong",[t._v("静态加载")]),t._v("”。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // ES6模块\n    import { stat, exists, readFile } from 'fs';\n复制代码\n")])])]),a("p",[t._v("上面代码的实质是从fs模块加载 3 个方法，其他方法不加载。即 ES6 可以在编译时就完成模块加载，效率要比 CommonJS 模块的加载方式高。当然，这也导致了没法引用 ES6 模块本身，因为它"),a("strong",[t._v("不是对象")]),t._v("。")]),t._v(" "),a("p",[t._v("由于 ES6 模块是编译时加载，使得静态分析成为可能。有了它，就能进一步拓宽 JavaScript 的语法，比如引入宏（macro）和类型检验（type system）这些只能靠静态分析实现的功能。")]),t._v(" "),a("p",[t._v("除了静态加载带来的各种好处，ES6 模块还有以下好处：")]),t._v(" "),a("ul",[a("li",[t._v("不再需要UMD模块格式了，将来服务器和浏览器都会支持 ES6 模块格式。目前，通过各种工具库，其实已经做到了这一点。")]),t._v(" "),a("li",[t._v("将来浏览器的新API 就能用模块格式提供，不再必须做成全局变量或者"),a("code",[t._v("navigator")]),t._v("对象的属性。")]),t._v(" "),a("li",[t._v("不再需要对象作为命名空间（比如"),a("code",[t._v("Math")]),t._v("对象），未来这些功能可以通过模块提供。")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ol",[a("li",[t._v("CommonJS规范主要用于服务端编程，加载模块是同步的，这并不适合在浏览器环境，因为同步意味着阻塞加载，浏览器资源是异步加载的，因此有了AMD、CMD解决方案。")]),t._v(" "),a("li",[t._v("AMD规范在浏览器环境中异步加载模块，而且可以并行加载多个模块。不过，AMD规范开发成本高，代码的阅读和书写比较困难，模块定义方式的语义不顺畅。")]),t._v(" "),a("li",[t._v("CMD规范与AMD规范很相似，都用于浏览器编程，依赖就近，延迟执行，可以很容易在"),a("code",[t._v("Node.js")]),t._v("中运行。不过，依赖SPM打包，模块的加载逻辑偏重。")]),t._v(" "),a("li",[t._v("ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD 规范，成为浏览器和服务器通用的模块解决方案。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);